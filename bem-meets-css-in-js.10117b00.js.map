{"version":3,"sources":["node_modules/impress.js/js/impress.js","node_modules/prismjs/prism.js","node_modules/prismjs/components/prism-jsx.min.js","index.js"],"names":["impress","init","hljs","initHighlightingOnLoad"],"mappings":"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","file":"bem-meets-css-in-js.10117b00.js","sourceRoot":"..","sourcesContent":["// This file was automatically generated from files in src/ directory.\n\n/**\n * impress.js\n *\n * impress.js is a presentation tool based on the power of CSS3 transforms and transitions\n * in modern browsers and inspired by the idea behind prezi.com.\n *\n *\n * Copyright 2011-2012 Bartek Szopka (@bartaz), 2016-2018 Henrik Ingo (@henrikingo)\n *\n * Released under the MIT and GPL Licenses.\n *\n * ------------------------------------------------\n *  author:  Bartek Szopka, Henrik Ingo\n *  version: 1.0.0\n *  url:     http://impress.js.org\n *  source:  http://github.com/impress/impress.js/\n */\n\n// You are one of those who like to know how things work inside?\n// Let me show you the cogs that make impress.js run...\n( function( document, window ) {\n    \"use strict\";\n    var lib;\n\n    // HELPER FUNCTIONS\n\n    // `pfx` is a function that takes a standard CSS property name as a parameter\n    // and returns it's prefixed version valid for current browser it runs in.\n    // The code is heavily inspired by Modernizr http://www.modernizr.com/\n    var pfx = ( function() {\n\n        var style = document.createElement( \"dummy\" ).style,\n            prefixes = \"Webkit Moz O ms Khtml\".split( \" \" ),\n            memory = {};\n\n        return function( prop ) {\n            if ( typeof memory[ prop ] === \"undefined\" ) {\n\n                var ucProp  = prop.charAt( 0 ).toUpperCase() + prop.substr( 1 ),\n                    props   = ( prop + \" \" + prefixes.join( ucProp + \" \" ) + ucProp ).split( \" \" );\n\n                memory[ prop ] = null;\n                for ( var i in props ) {\n                    if ( style[ props[ i ] ] !== undefined ) {\n                        memory[ prop ] = props[ i ];\n                        break;\n                    }\n                }\n\n            }\n\n            return memory[ prop ];\n        };\n\n    } )();\n\n    var validateOrder = function( order, fallback ) {\n        var validChars = \"xyz\";\n        var returnStr = \"\";\n        if ( typeof order === \"string\" ) {\n            for ( var i in order.split( \"\" ) ) {\n                if ( validChars.indexOf( order[ i ] ) >= 0 ) {\n                    returnStr += order[ i ];\n\n                    // Each of x,y,z can be used only once.\n                    validChars = validChars.split( order[ i ] ).join( \"\" );\n                }\n            }\n        }\n        if ( returnStr ) {\n            return returnStr;\n        } else if ( fallback !== undefined ) {\n            return fallback;\n        } else {\n            return \"xyz\";\n        }\n    };\n\n    // `css` function applies the styles given in `props` object to the element\n    // given as `el`. It runs all property names through `pfx` function to make\n    // sure proper prefixed version of the property is used.\n    var css = function( el, props ) {\n        var key, pkey;\n        for ( key in props ) {\n            if ( props.hasOwnProperty( key ) ) {\n                pkey = pfx( key );\n                if ( pkey !== null ) {\n                    el.style[ pkey ] = props[ key ];\n                }\n            }\n        }\n        return el;\n    };\n\n    // `translate` builds a translate transform string for given data.\n    var translate = function( t ) {\n        return \" translate3d(\" + t.x + \"px,\" + t.y + \"px,\" + t.z + \"px) \";\n    };\n\n    // `rotate` builds a rotate transform string for given data.\n    // By default the rotations are in X Y Z order that can be reverted by passing `true`\n    // as second parameter.\n    var rotate = function( r, revert ) {\n        var order = r.order ? r.order : \"xyz\";\n        var css = \"\";\n        var axes = order.split( \"\" );\n        if ( revert ) {\n            axes = axes.reverse();\n        }\n\n        for ( var i = 0; i < axes.length; i++ ) {\n            css += \" rotate\" + axes[ i ].toUpperCase() + \"(\" + r[ axes[ i ] ] + \"deg)\";\n        }\n        return css;\n    };\n\n    // `scale` builds a scale transform string for given data.\n    var scale = function( s ) {\n        return \" scale(\" + s + \") \";\n    };\n\n    // `computeWindowScale` counts the scale factor between window size and size\n    // defined for the presentation in the config.\n    var computeWindowScale = function( config ) {\n        var hScale = window.innerHeight / config.height,\n            wScale = window.innerWidth / config.width,\n            scale = hScale > wScale ? wScale : hScale;\n\n        if ( config.maxScale && scale > config.maxScale ) {\n            scale = config.maxScale;\n        }\n\n        if ( config.minScale && scale < config.minScale ) {\n            scale = config.minScale;\n        }\n\n        return scale;\n    };\n\n    // CHECK SUPPORT\n    var body = document.body;\n    var impressSupported =\n\n                          // Browser should support CSS 3D transtorms\n                           ( pfx( \"perspective\" ) !== null ) &&\n\n                          // And `classList` and `dataset` APIs\n                           ( body.classList ) &&\n                           ( body.dataset );\n\n    if ( !impressSupported ) {\n\n        // We can't be sure that `classList` is supported\n        body.className += \" impress-not-supported \";\n    }\n\n    // GLOBALS AND DEFAULTS\n\n    // This is where the root elements of all impress.js instances will be kept.\n    // Yes, this means you can have more than one instance on a page, but I'm not\n    // sure if it makes any sense in practice ;)\n    var roots = {};\n\n    var preInitPlugins = [];\n    var preStepLeavePlugins = [];\n\n    // Some default config values.\n    var defaults = {\n        width: 1024,\n        height: 768,\n        maxScale: 1,\n        minScale: 0,\n\n        perspective: 1000,\n\n        transitionDuration: 1000\n    };\n\n    // It's just an empty function ... and a useless comment.\n    var empty = function() { return false; };\n\n    // IMPRESS.JS API\n\n    // And that's where interesting things will start to happen.\n    // It's the core `impress` function that returns the impress.js API\n    // for a presentation based on the element with given id (\"impress\"\n    // by default).\n    var impress = window.impress = function( rootId ) {\n\n        // If impress.js is not supported by the browser return a dummy API\n        // it may not be a perfect solution but we return early and avoid\n        // running code that may use features not implemented in the browser.\n        if ( !impressSupported ) {\n            return {\n                init: empty,\n                goto: empty,\n                prev: empty,\n                next: empty,\n                swipe: empty,\n                tear: empty,\n                lib: {}\n            };\n        }\n\n        rootId = rootId || \"impress\";\n\n        // If given root is already initialized just return the API\n        if ( roots[ \"impress-root-\" + rootId ] ) {\n            return roots[ \"impress-root-\" + rootId ];\n        }\n\n        // The gc library depends on being initialized before we do any changes to DOM.\n        lib = initLibraries( rootId );\n\n        body.classList.remove( \"impress-not-supported\" );\n        body.classList.add( \"impress-supported\" );\n\n        // Data of all presentation steps\n        var stepsData = {};\n\n        // Element of currently active step\n        var activeStep = null;\n\n        // Current state (position, rotation and scale) of the presentation\n        var currentState = null;\n\n        // Array of step elements\n        var steps = null;\n\n        // Configuration options\n        var config = null;\n\n        // Scale factor of the browser window\n        var windowScale = null;\n\n        // Root presentation elements\n        var root = lib.util.byId( rootId );\n        var canvas = document.createElement( \"div\" );\n\n        var initialized = false;\n\n        // STEP EVENTS\n        //\n        // There are currently two step events triggered by impress.js\n        // `impress:stepenter` is triggered when the step is shown on the\n        // screen (the transition from the previous one is finished) and\n        // `impress:stepleave` is triggered when the step is left (the\n        // transition to next step just starts).\n\n        // Reference to last entered step\n        var lastEntered = null;\n\n        // `onStepEnter` is called whenever the step element is entered\n        // but the event is triggered only if the step is different than\n        // last entered step.\n        // We sometimes call `goto`, and therefore `onStepEnter`, just to redraw a step, such as\n        // after screen resize. In this case - more precisely, in any case - we trigger a\n        // `impress:steprefresh` event.\n        var onStepEnter = function( step ) {\n            if ( lastEntered !== step ) {\n                lib.util.triggerEvent( step, \"impress:stepenter\" );\n                lastEntered = step;\n            }\n            lib.util.triggerEvent( step, \"impress:steprefresh\" );\n        };\n\n        // `onStepLeave` is called whenever the currentStep element is left\n        // but the event is triggered only if the currentStep is the same as\n        // lastEntered step.\n        var onStepLeave = function( currentStep, nextStep ) {\n            if ( lastEntered === currentStep ) {\n                lib.util.triggerEvent( currentStep, \"impress:stepleave\", { next: nextStep } );\n                lastEntered = null;\n            }\n        };\n\n        // `initStep` initializes given step element by reading data from its\n        // data attributes and setting correct styles.\n        var initStep = function( el, idx ) {\n            var data = el.dataset,\n                step = {\n                    translate: {\n                        x: lib.util.toNumber( data.x ),\n                        y: lib.util.toNumber( data.y ),\n                        z: lib.util.toNumber( data.z )\n                    },\n                    rotate: {\n                        x: lib.util.toNumber( data.rotateX ),\n                        y: lib.util.toNumber( data.rotateY ),\n                        z: lib.util.toNumber( data.rotateZ || data.rotate ),\n                        order: validateOrder( data.rotateOrder )\n                    },\n                    scale: lib.util.toNumber( data.scale, 1 ),\n                    transitionDuration: lib.util.toNumber(\n                        data.transitionDuration, config.transitionDuration\n                    ),\n                    el: el\n                };\n\n            if ( !el.id ) {\n                el.id = \"step-\" + ( idx + 1 );\n            }\n\n            stepsData[ \"impress-\" + el.id ] = step;\n\n            css( el, {\n                position: \"absolute\",\n                transform: \"translate(-50%,-50%)\" +\n                           translate( step.translate ) +\n                           rotate( step.rotate ) +\n                           scale( step.scale ),\n                transformStyle: \"preserve-3d\"\n            } );\n        };\n\n        // Initialize all steps.\n        // Read the data-* attributes, store in internal stepsData, and render with CSS.\n        var initAllSteps = function() {\n            steps = lib.util.$$( \".step\", root );\n            steps.forEach( initStep );\n        };\n\n        // `init` API function that initializes (and runs) the presentation.\n        var init = function() {\n            if ( initialized ) { return; }\n            execPreInitPlugins( root );\n\n            // First we set up the viewport for mobile devices.\n            // For some reason iPad goes nuts when it is not done properly.\n            var meta = lib.util.$( \"meta[name='viewport']\" ) || document.createElement( \"meta\" );\n            meta.content = \"width=device-width, minimum-scale=1, maximum-scale=1, user-scalable=no\";\n            if ( meta.parentNode !== document.head ) {\n                meta.name = \"viewport\";\n                document.head.appendChild( meta );\n            }\n\n            // Initialize configuration object\n            var rootData = root.dataset;\n            config = {\n                width: lib.util.toNumber( rootData.width, defaults.width ),\n                height: lib.util.toNumber( rootData.height, defaults.height ),\n                maxScale: lib.util.toNumber( rootData.maxScale, defaults.maxScale ),\n                minScale: lib.util.toNumber( rootData.minScale, defaults.minScale ),\n                perspective: lib.util.toNumber( rootData.perspective, defaults.perspective ),\n                transitionDuration: lib.util.toNumber(\n                    rootData.transitionDuration, defaults.transitionDuration\n                )\n            };\n\n            windowScale = computeWindowScale( config );\n\n            // Wrap steps with \"canvas\" element\n            lib.util.arrayify( root.childNodes ).forEach( function( el ) {\n                canvas.appendChild( el );\n            } );\n            root.appendChild( canvas );\n\n            // Set initial styles\n            document.documentElement.style.height = \"100%\";\n\n            css( body, {\n                height: \"100%\",\n                overflow: \"hidden\"\n            } );\n\n            var rootStyles = {\n                position: \"absolute\",\n                transformOrigin: \"top left\",\n                transition: \"all 0s ease-in-out\",\n                transformStyle: \"preserve-3d\"\n            };\n\n            css( root, rootStyles );\n            css( root, {\n                top: \"50%\",\n                left: \"50%\",\n                perspective: ( config.perspective / windowScale ) + \"px\",\n                transform: scale( windowScale )\n            } );\n            css( canvas, rootStyles );\n\n            body.classList.remove( \"impress-disabled\" );\n            body.classList.add( \"impress-enabled\" );\n\n            // Get and init steps\n            initAllSteps();\n\n            // Set a default initial state of the canvas\n            currentState = {\n                translate: { x: 0, y: 0, z: 0 },\n                rotate:    { x: 0, y: 0, z: 0, order: \"xyz\" },\n                scale:     1\n            };\n\n            initialized = true;\n\n            lib.util.triggerEvent( root, \"impress:init\",\n                                   { api: roots[ \"impress-root-\" + rootId ] } );\n        };\n\n        // `getStep` is a helper function that returns a step element defined by parameter.\n        // If a number is given, step with index given by the number is returned, if a string\n        // is given step element with such id is returned, if DOM element is given it is returned\n        // if it is a correct step element.\n        var getStep = function( step ) {\n            if ( typeof step === \"number\" ) {\n                step = step < 0 ? steps[ steps.length + step ] : steps[ step ];\n            } else if ( typeof step === \"string\" ) {\n                step = lib.util.byId( step );\n            }\n            return ( step && step.id && stepsData[ \"impress-\" + step.id ] ) ? step : null;\n        };\n\n        // Used to reset timeout for `impress:stepenter` event\n        var stepEnterTimeout = null;\n\n        // `goto` API function that moves to step given as `el` parameter (by index, id or element).\n        // `duration` optionally given as second parameter, is the transition duration in css.\n        // `reason` is the string \"next\", \"prev\" or \"goto\" (default) and will be made available to\n        // preStepLeave plugins.\n        // `origEvent` may contain event that caused the call to goto, such as a key press event\n        var goto = function( el, duration, reason, origEvent ) {\n            reason = reason || \"goto\";\n            origEvent = origEvent || null;\n\n            if ( !initialized ) {\n                return false;\n            }\n\n            // Re-execute initAllSteps for each transition. This allows to edit step attributes\n            // dynamically, such as change their coordinates, or even remove or add steps, and have\n            // that change apply when goto() is called.\n            initAllSteps();\n\n            if ( !( el = getStep( el ) ) ) {\n                return false;\n            }\n\n            // Sometimes it's possible to trigger focus on first link with some keyboard action.\n            // Browser in such a case tries to scroll the page to make this element visible\n            // (even that body overflow is set to hidden) and it breaks our careful positioning.\n            //\n            // So, as a lousy (and lazy) workaround we will make the page scroll back to the top\n            // whenever slide is selected\n            //\n            // If you are reading this and know any better way to handle it, I'll be glad to hear\n            // about it!\n            window.scrollTo( 0, 0 );\n\n            var step = stepsData[ \"impress-\" + el.id ];\n            duration = ( duration !== undefined ? duration : step.transitionDuration );\n\n            // If we are in fact moving to another step, start with executing the registered\n            // preStepLeave plugins.\n            if ( activeStep && activeStep !== el ) {\n                var event = { target: activeStep, detail: {} };\n                event.detail.next = el;\n                event.detail.transitionDuration = duration;\n                event.detail.reason = reason;\n                if ( origEvent ) {\n                    event.origEvent = origEvent;\n                }\n\n                if ( execPreStepLeavePlugins( event ) === false ) {\n\n                    // PreStepLeave plugins are allowed to abort the transition altogether, by\n                    // returning false.\n                    // see stop and substep plugins for an example of doing just that\n                    return false;\n                }\n\n                // Plugins are allowed to change the detail values\n                el = event.detail.next;\n                step = stepsData[ \"impress-\" + el.id ];\n                duration = event.detail.transitionDuration;\n            }\n\n            if ( activeStep ) {\n                activeStep.classList.remove( \"active\" );\n                body.classList.remove( \"impress-on-\" + activeStep.id );\n            }\n            el.classList.add( \"active\" );\n\n            body.classList.add( \"impress-on-\" + el.id );\n\n            // Compute target state of the canvas based on given step\n            var target = {\n                rotate: {\n                    x: -step.rotate.x,\n                    y: -step.rotate.y,\n                    z: -step.rotate.z,\n                    order: step.rotate.order\n                },\n                translate: {\n                    x: -step.translate.x,\n                    y: -step.translate.y,\n                    z: -step.translate.z\n                },\n                scale: 1 / step.scale\n            };\n\n            // Check if the transition is zooming in or not.\n            //\n            // This information is used to alter the transition style:\n            // when we are zooming in - we start with move and rotate transition\n            // and the scaling is delayed, but when we are zooming out we start\n            // with scaling down and move and rotation are delayed.\n            var zoomin = target.scale >= currentState.scale;\n\n            duration = lib.util.toNumber( duration, config.transitionDuration );\n            var delay = ( duration / 2 );\n\n            // If the same step is re-selected, force computing window scaling,\n            // because it is likely to be caused by window resize\n            if ( el === activeStep ) {\n                windowScale = computeWindowScale( config );\n            }\n\n            var targetScale = target.scale * windowScale;\n\n            // Trigger leave of currently active element (if it's not the same step again)\n            if ( activeStep && activeStep !== el ) {\n                onStepLeave( activeStep, el );\n            }\n\n            // Now we alter transforms of `root` and `canvas` to trigger transitions.\n            //\n            // And here is why there are two elements: `root` and `canvas` - they are\n            // being animated separately:\n            // `root` is used for scaling and `canvas` for translate and rotations.\n            // Transitions on them are triggered with different delays (to make\n            // visually nice and \"natural\" looking transitions), so we need to know\n            // that both of them are finished.\n            css( root, {\n\n                // To keep the perspective look similar for different scales\n                // we need to \"scale\" the perspective, too\n                // For IE 11 support we must specify perspective independent\n                // of transform.\n                perspective: ( config.perspective / targetScale ) + \"px\",\n                transform: scale( targetScale ),\n                transitionDuration: duration + \"ms\",\n                transitionDelay: ( zoomin ? delay : 0 ) + \"ms\"\n            } );\n\n            css( canvas, {\n                transform: rotate( target.rotate, true ) + translate( target.translate ),\n                transitionDuration: duration + \"ms\",\n                transitionDelay: ( zoomin ? 0 : delay ) + \"ms\"\n            } );\n\n            // Here is a tricky part...\n            //\n            // If there is no change in scale or no change in rotation and translation, it means\n            // there was actually no delay - because there was no transition on `root` or `canvas`\n            // elements. We want to trigger `impress:stepenter` event in the correct moment, so\n            // here we compare the current and target values to check if delay should be taken into\n            // account.\n            //\n            // I know that this `if` statement looks scary, but it's pretty simple when you know\n            // what is going on - it's simply comparing all the values.\n            if ( currentState.scale === target.scale ||\n                ( currentState.rotate.x === target.rotate.x &&\n                  currentState.rotate.y === target.rotate.y &&\n                  currentState.rotate.z === target.rotate.z &&\n                  currentState.translate.x === target.translate.x &&\n                  currentState.translate.y === target.translate.y &&\n                  currentState.translate.z === target.translate.z ) ) {\n                delay = 0;\n            }\n\n            // Store current state\n            currentState = target;\n            activeStep = el;\n\n            // And here is where we trigger `impress:stepenter` event.\n            // We simply set up a timeout to fire it taking transition duration (and possible delay)\n            // into account.\n            //\n            // I really wanted to make it in more elegant way. The `transitionend` event seemed to\n            // be the best way to do it, but the fact that I'm using transitions on two separate\n            // elements and that the `transitionend` event is only triggered when there was a\n            // transition (change in the values) caused some bugs and made the code really\n            // complicated, cause I had to handle all the conditions separately. And it still\n            // needed a `setTimeout` fallback for the situations when there is no transition at all.\n            // So I decided that I'd rather make the code simpler than use shiny new\n            // `transitionend`.\n            //\n            // If you want learn something interesting and see how it was done with `transitionend`\n            // go back to version 0.5.2 of impress.js:\n            // http://github.com/bartaz/impress.js/blob/0.5.2/js/impress.js\n            window.clearTimeout( stepEnterTimeout );\n            stepEnterTimeout = window.setTimeout( function() {\n                onStepEnter( activeStep );\n            }, duration + delay );\n\n            return el;\n        };\n\n        // `prev` API function goes to previous step (in document order)\n        // `event` is optional, may contain the event that caused the need to call prev()\n        var prev = function( origEvent ) {\n            var prev = steps.indexOf( activeStep ) - 1;\n            prev = prev >= 0 ? steps[ prev ] : steps[ steps.length - 1 ];\n\n            return goto( prev, undefined, \"prev\", origEvent );\n        };\n\n        // `next` API function goes to next step (in document order)\n        // `event` is optional, may contain the event that caused the need to call next()\n        var next = function( origEvent ) {\n            var next = steps.indexOf( activeStep ) + 1;\n            next = next < steps.length ? steps[ next ] : steps[ 0 ];\n\n            return goto( next, undefined, \"next\", origEvent );\n        };\n\n        // Swipe for touch devices by @and3rson.\n        // Below we extend the api to control the animation between the currently\n        // active step and a presumed next/prev step. See touch plugin for\n        // an example of using this api.\n\n        // Helper function\n        var interpolate = function( a, b, k ) {\n            return a + ( b - a ) * k;\n        };\n\n        // Animate a swipe.\n        //\n        // Pct is a value between -1.0 and +1.0, designating the current length\n        // of the swipe.\n        //\n        // If pct is negative, swipe towards the next() step, if positive,\n        // towards the prev() step.\n        //\n        // Note that pre-stepleave plugins such as goto can mess with what is a\n        // next() and prev() step, so we need to trigger the pre-stepleave event\n        // here, even if a swipe doesn't guarantee that the transition will\n        // actually happen.\n        //\n        // Calling swipe(), with any value of pct, won't in itself cause a\n        // transition to happen, this is just to animate the swipe. Once the\n        // transition is committed - such as at a touchend event - caller is\n        // responsible for also calling prev()/next() as appropriate.\n        //\n        // Note: For now, this function is made available to be used by the swipe plugin (which\n        // is the UI counterpart to this). It is a semi-internal API and intentionally not\n        // documented in DOCUMENTATION.md.\n        var swipe = function( pct ) {\n            if ( Math.abs( pct ) > 1 ) {\n                return;\n            }\n\n            // Prepare & execute the preStepLeave event\n            var event = { target: activeStep, detail: {} };\n            event.detail.swipe = pct;\n\n            // Will be ignored within swipe animation, but just in case a plugin wants to read this,\n            // humor them\n            event.detail.transitionDuration = config.transitionDuration;\n            var idx; // Needed by jshint\n            if ( pct < 0 ) {\n                idx = steps.indexOf( activeStep ) + 1;\n                event.detail.next = idx < steps.length ? steps[ idx ] : steps[ 0 ];\n                event.detail.reason = \"next\";\n            } else if ( pct > 0 ) {\n                idx = steps.indexOf( activeStep ) - 1;\n                event.detail.next = idx >= 0 ? steps[ idx ] : steps[ steps.length - 1 ];\n                event.detail.reason = \"prev\";\n            } else {\n\n                // No move\n                return;\n            }\n            if ( execPreStepLeavePlugins( event ) === false ) {\n\n                // If a preStepLeave plugin wants to abort the transition, don't animate a swipe\n                // For stop, this is probably ok. For substep, the plugin it self might want to do\n                // some animation, but that's not the current implementation.\n                return false;\n            }\n            var nextElement = event.detail.next;\n\n            var nextStep = stepsData[ \"impress-\" + nextElement.id ];\n\n            // If the same step is re-selected, force computing window scaling,\n            var nextScale = nextStep.scale * windowScale;\n            var k = Math.abs( pct );\n\n            var interpolatedStep = {\n                translate: {\n                    x: interpolate( currentState.translate.x, -nextStep.translate.x, k ),\n                    y: interpolate( currentState.translate.y, -nextStep.translate.y, k ),\n                    z: interpolate( currentState.translate.z, -nextStep.translate.z, k )\n                },\n                rotate: {\n                    x: interpolate( currentState.rotate.x, -nextStep.rotate.x, k ),\n                    y: interpolate( currentState.rotate.y, -nextStep.rotate.y, k ),\n                    z: interpolate( currentState.rotate.z, -nextStep.rotate.z, k ),\n\n                    // Unfortunately there's a discontinuity if rotation order changes. Nothing I\n                    // can do about it?\n                    order: k < 0.7 ? currentState.rotate.order : nextStep.rotate.order\n                },\n                scale: interpolate( currentState.scale, nextScale, k )\n            };\n\n            css( root, {\n\n                // To keep the perspective look similar for different scales\n                // we need to 'scale' the perspective, too\n                perspective: config.perspective / interpolatedStep.scale + \"px\",\n                transform: scale( interpolatedStep.scale ),\n                transitionDuration: \"0ms\",\n                transitionDelay: \"0ms\"\n            } );\n\n            css( canvas, {\n                transform: rotate( interpolatedStep.rotate, true ) +\n                           translate( interpolatedStep.translate ),\n                transitionDuration: \"0ms\",\n                transitionDelay: \"0ms\"\n            } );\n        };\n\n        // Teardown impress\n        // Resets the DOM to the state it was before impress().init() was called.\n        // (If you called impress(rootId).init() for multiple different rootId's, then you must\n        // also call tear() once for each of them.)\n        var tear = function() {\n            lib.gc.teardown();\n            delete roots[ \"impress-root-\" + rootId ];\n        };\n\n        // Adding some useful classes to step elements.\n        //\n        // All the steps that have not been shown yet are given `future` class.\n        // When the step is entered the `future` class is removed and the `present`\n        // class is given. When the step is left `present` class is replaced with\n        // `past` class.\n        //\n        // So every step element is always in one of three possible states:\n        // `future`, `present` and `past`.\n        //\n        // There classes can be used in CSS to style different types of steps.\n        // For example the `present` class can be used to trigger some custom\n        // animations when step is shown.\n        lib.gc.addEventListener( root, \"impress:init\", function() {\n\n            // STEP CLASSES\n            steps.forEach( function( step ) {\n                step.classList.add( \"future\" );\n            } );\n\n            lib.gc.addEventListener( root, \"impress:stepenter\", function( event ) {\n                event.target.classList.remove( \"past\" );\n                event.target.classList.remove( \"future\" );\n                event.target.classList.add( \"present\" );\n            }, false );\n\n            lib.gc.addEventListener( root, \"impress:stepleave\", function( event ) {\n                event.target.classList.remove( \"present\" );\n                event.target.classList.add( \"past\" );\n            }, false );\n\n        }, false );\n\n        // Adding hash change support.\n        lib.gc.addEventListener( root, \"impress:init\", function() {\n\n            // Last hash detected\n            var lastHash = \"\";\n\n            // `#/step-id` is used instead of `#step-id` to prevent default browser\n            // scrolling to element in hash.\n            //\n            // And it has to be set after animation finishes, because in Chrome it\n            // makes transtion laggy.\n            // BUG: http://code.google.com/p/chromium/issues/detail?id=62820\n            lib.gc.addEventListener( root, \"impress:stepenter\", function( event ) {\n                window.location.hash = lastHash = \"#/\" + event.target.id;\n            }, false );\n\n            lib.gc.addEventListener( window, \"hashchange\", function() {\n\n                // When the step is entered hash in the location is updated\n                // (just few lines above from here), so the hash change is\n                // triggered and we would call `goto` again on the same element.\n                //\n                // To avoid this we store last entered hash and compare.\n                if ( window.location.hash !== lastHash ) {\n                    goto( lib.util.getElementFromHash() );\n                }\n            }, false );\n\n            // START\n            // by selecting step defined in url or first step of the presentation\n            goto( lib.util.getElementFromHash() || steps[ 0 ], 0 );\n        }, false );\n\n        body.classList.add( \"impress-disabled\" );\n\n        // Store and return API for given impress.js root element\n        return ( roots[ \"impress-root-\" + rootId ] = {\n            init: init,\n            goto: goto,\n            next: next,\n            prev: prev,\n            swipe: swipe,\n            tear: tear,\n            lib: lib\n        } );\n\n    };\n\n    // Flag that can be used in JS to check if browser have passed the support test\n    impress.supported = impressSupported;\n\n    // ADD and INIT LIBRARIES\n    // Library factories are defined in src/lib/*.js, and register themselves by calling\n    // impress.addLibraryFactory(libraryFactoryObject). They're stored here, and used to augment\n    // the API with library functions when client calls impress(rootId).\n    // See src/lib/README.md for clearer example.\n    // (Advanced usage: For different values of rootId, a different instance of the libaries are\n    // generated, in case they need to hold different state for different root elements.)\n    var libraryFactories = {};\n    impress.addLibraryFactory = function( obj ) {\n        for ( var libname in obj ) {\n            if ( obj.hasOwnProperty( libname ) ) {\n                libraryFactories[ libname ] = obj[ libname ];\n            }\n        }\n    };\n\n    // Call each library factory, and return the lib object that is added to the api.\n    var initLibraries = function( rootId ) { //jshint ignore:line\n        var lib = {};\n        for ( var libname in libraryFactories ) {\n            if ( libraryFactories.hasOwnProperty( libname ) ) {\n                if ( lib[ libname ] !== undefined ) {\n                    throw \"impress.js ERROR: Two libraries both tried to use libname: \" +  libname;\n                }\n                lib[ libname ] = libraryFactories[ libname ]( rootId );\n            }\n        }\n        return lib;\n    };\n\n    // `addPreInitPlugin` allows plugins to register a function that should\n    // be run (synchronously) at the beginning of init, before\n    // impress().init() itself executes.\n    impress.addPreInitPlugin = function( plugin, weight ) {\n        weight = parseInt( weight ) || 10;\n        if ( weight <= 0 ) {\n            throw \"addPreInitPlugin: weight must be a positive integer\";\n        }\n\n        if ( preInitPlugins[ weight ] === undefined ) {\n            preInitPlugins[ weight ] = [];\n        }\n        preInitPlugins[ weight ].push( plugin );\n    };\n\n    // Called at beginning of init, to execute all pre-init plugins.\n    var execPreInitPlugins = function( root ) { //jshint ignore:line\n        for ( var i = 0; i < preInitPlugins.length; i++ ) {\n            var thisLevel = preInitPlugins[ i ];\n            if ( thisLevel !== undefined ) {\n                for ( var j = 0; j < thisLevel.length; j++ ) {\n                    thisLevel[ j ]( root );\n                }\n            }\n        }\n    };\n\n    // `addPreStepLeavePlugin` allows plugins to register a function that should\n    // be run (synchronously) at the beginning of goto()\n    impress.addPreStepLeavePlugin = function( plugin, weight ) { //jshint ignore:line\n        weight = parseInt( weight ) || 10;\n        if ( weight <= 0 ) {\n            throw \"addPreStepLeavePlugin: weight must be a positive integer\";\n        }\n\n        if ( preStepLeavePlugins[ weight ] === undefined ) {\n            preStepLeavePlugins[ weight ] = [];\n        }\n        preStepLeavePlugins[ weight ].push( plugin );\n    };\n\n    // Called at beginning of goto(), to execute all preStepLeave plugins.\n    var execPreStepLeavePlugins = function( event ) { //jshint ignore:line\n        for ( var i = 0; i < preStepLeavePlugins.length; i++ ) {\n            var thisLevel = preStepLeavePlugins[ i ];\n            if ( thisLevel !== undefined ) {\n                for ( var j = 0; j < thisLevel.length; j++ ) {\n                    if ( thisLevel[ j ]( event ) === false ) {\n\n                        // If a plugin returns false, the stepleave event (and related transition)\n                        // is aborted\n                        return false;\n                    }\n                }\n            }\n        }\n    };\n\n} )( document, window );\n\n// THAT'S ALL FOLKS!\n//\n// Thanks for reading it all.\n// Or thanks for scrolling down and reading the last part.\n//\n// I've learnt a lot when building impress.js and I hope this code and comments\n// will help somebody learn at least some part of it.\n\n/**\n * Garbage collection utility\n *\n * This library allows plugins to add elements and event listeners they add to the DOM. The user\n * can call `impress().lib.gc.teardown()` to cause all of them to be removed from DOM, so that\n * the document is in the state it was before calling `impress().init()`.\n *\n * In addition to just adding elements and event listeners to the garbage collector, plugins\n * can also register callback functions to do arbitrary cleanup upon teardown.\n *\n * Henrik Ingo (c) 2016\n * MIT License\n */\n\n( function( document, window ) {\n    \"use strict\";\n    var roots = [];\n    var rootsCount = 0;\n    var startingState = { roots: [] };\n\n    var libraryFactory = function( rootId ) {\n        if ( roots[ rootId ] ) {\n            return roots[ rootId ];\n        }\n\n        // Per root global variables (instance variables?)\n        var elementList = [];\n        var eventListenerList = [];\n        var callbackList = [];\n\n        recordStartingState( rootId );\n\n        // LIBRARY FUNCTIONS\n        // Definitions of the library functions we return as an object at the end\n\n        // `pushElement` adds a DOM element to the gc stack\n        var pushElement = function( element ) {\n            elementList.push( element );\n        };\n\n        // `appendChild` is a convenience wrapper that combines DOM appendChild with gc.pushElement\n        var appendChild = function( parent, element ) {\n            parent.appendChild( element );\n            pushElement( element );\n        };\n\n        // `pushEventListener` adds an event listener to the gc stack\n        var pushEventListener = function( target, type, listenerFunction ) {\n            eventListenerList.push( { target:target, type:type, listener:listenerFunction } );\n        };\n\n        // `addEventListener` combines DOM addEventListener with gc.pushEventListener\n        var addEventListener = function( target, type, listenerFunction ) {\n            target.addEventListener( type, listenerFunction );\n            pushEventListener( target, type, listenerFunction );\n        };\n\n        // `pushCallback` If the above utilities are not enough, plugins can add their own callback\n        // function to do arbitrary things.\n        var pushCallback = function( callback ) {\n            callbackList.push( callback );\n        };\n        pushCallback( function( rootId ) { resetStartingState( rootId ); } );\n\n        // `teardown` will\n        // - execute all callbacks in LIFO order\n        // - call `removeChild` on all DOM elements in LIFO order\n        // - call `removeEventListener` on all event listeners in LIFO order\n        // The goal of a teardown is to return to the same state that the DOM was before\n        // `impress().init()` was called.\n        var teardown = function() {\n\n            // Execute the callbacks in LIFO order\n            var i; // Needed by jshint\n            for ( i = callbackList.length - 1; i >= 0; i-- ) {\n                callbackList[ i ]( rootId );\n            }\n            callbackList = [];\n            for ( i = 0; i < elementList.length; i++ ) {\n                elementList[ i ].parentElement.removeChild( elementList[ i ] );\n            }\n            elementList = [];\n            for ( i = 0; i < eventListenerList.length; i++ ) {\n                var target   = eventListenerList[ i ].target;\n                var type     = eventListenerList[ i ].type;\n                var listener = eventListenerList[ i ].listener;\n                target.removeEventListener( type, listener );\n            }\n        };\n\n        var lib = {\n            pushElement: pushElement,\n            appendChild: appendChild,\n            pushEventListener: pushEventListener,\n            addEventListener: addEventListener,\n            pushCallback: pushCallback,\n            teardown: teardown\n        };\n        roots[ rootId ] = lib;\n        rootsCount++;\n        return lib;\n    };\n\n    // Let impress core know about the existence of this library\n    window.impress.addLibraryFactory( { gc: libraryFactory } );\n\n    // CORE INIT\n    // The library factory (gc(rootId)) is called at the beginning of impress(rootId).init()\n    // For the purposes of teardown(), we can use this as an opportunity to save the state\n    // of a few things in the DOM in their virgin state, before impress().init() did anything.\n    // Note: These could also be recorded by the code in impress.js core as these values\n    // are changed, but in an effort to not deviate too much from upstream, I'm adding\n    // them here rather than the core itself.\n    var recordStartingState = function( rootId ) {\n        startingState.roots[ rootId ] = {};\n        startingState.roots[ rootId ].steps = [];\n\n        // Record whether the steps have an id or not\n        var steps = document.getElementById( rootId ).querySelectorAll( \".step\" );\n        for ( var i = 0; i < steps.length; i++ ) {\n            var el = steps[ i ];\n            startingState.roots[ rootId ].steps.push( {\n                el: el,\n                id: el.getAttribute( \"id\" )\n            } );\n        }\n\n        // In the rare case of multiple roots, the following is changed on first init() and\n        // reset at last tear().\n        if ( rootsCount === 0 ) {\n            startingState.body = {};\n\n            // It is customary for authors to set body.class=\"impress-not-supported\" as a starting\n            // value, which can then be removed by impress().init(). But it is not required.\n            // Remember whether it was there or not.\n            if ( document.body.classList.contains( \"impress-not-supported\" ) ) {\n                startingState.body.impressNotSupported = true;\n            } else {\n                startingState.body.impressNotSupported = false;\n            }\n\n            // If there's a <meta name=\"viewport\"> element, its contents will be overwritten by init\n            var metas = document.head.querySelectorAll( \"meta\" );\n            for ( i = 0; i < metas.length; i++ ) {\n                var m = metas[ i ];\n                if ( m.name === \"viewport\" ) {\n                    startingState.meta = m.content;\n                }\n            }\n        }\n    };\n\n    // CORE TEARDOWN\n    var resetStartingState = function( rootId ) {\n\n        // Reset body element\n        document.body.classList.remove( \"impress-enabled\" );\n        document.body.classList.remove( \"impress-disabled\" );\n\n        var root = document.getElementById( rootId );\n        var activeId = root.querySelector( \".active\" ).id;\n        document.body.classList.remove( \"impress-on-\" + activeId );\n\n        document.documentElement.style.height = \"\";\n        document.body.style.height = \"\";\n        document.body.style.overflow = \"\";\n\n        // Remove style values from the root and step elements\n        // Note: We remove the ones set by impress.js core. Otoh, we didn't preserve any original\n        // values. A more sophisticated implementation could keep track of original values and then\n        // reset those.\n        var steps = root.querySelectorAll( \".step\" );\n        for ( var i = 0; i < steps.length; i++ ) {\n            steps[ i ].classList.remove( \"future\" );\n            steps[ i ].classList.remove( \"past\" );\n            steps[ i ].classList.remove( \"present\" );\n            steps[ i ].classList.remove( \"active\" );\n            steps[ i ].style.position = \"\";\n            steps[ i ].style.transform = \"\";\n            steps[ i ].style[ \"transform-style\" ] = \"\";\n        }\n        root.style.position = \"\";\n        root.style[ \"transform-origin\" ] = \"\";\n        root.style.transition = \"\";\n        root.style[ \"transform-style\" ] = \"\";\n        root.style.top = \"\";\n        root.style.left = \"\";\n        root.style.transform = \"\";\n\n        // Reset id of steps (\"step-1\" id's are auto generated)\n        steps = startingState.roots[ rootId ].steps;\n        var step;\n        while ( step = steps.pop() ) {\n            if ( step.id === null ) {\n                step.el.removeAttribute( \"id\" );\n            } else {\n                step.el.setAttribute( \"id\", step.id );\n            }\n        }\n        delete startingState.roots[ rootId ];\n\n        // Move step div elements away from canvas, then delete canvas\n        // Note: There's an implicit assumption here that the canvas div is the only child element\n        // of the root div. If there would be something else, it's gonna be lost.\n        var canvas = root.firstChild;\n        var canvasHTML = canvas.innerHTML;\n        root.innerHTML = canvasHTML;\n\n        if ( roots[ rootId ] !== undefined ) {\n            delete roots[ rootId ];\n            rootsCount--;\n        }\n        if ( rootsCount === 0 ) {\n\n            // In the rare case that more than one impress root elements were initialized, these\n            // are only reset when all are uninitialized.\n            document.body.classList.remove( \"impress-supported\" );\n            if ( startingState.body.impressNotSupported ) {\n                document.body.classList.add( \"impress-not-supported\" );\n            }\n\n            // We need to remove or reset the meta element inserted by impress.js\n            var metas = document.head.querySelectorAll( \"meta\" );\n            for ( i = 0; i < metas.length; i++ ) {\n                var m = metas[ i ];\n                if ( m.name === \"viewport\" ) {\n                    if ( startingState.meta !== undefined ) {\n                        m.content = startingState.meta;\n                    } else {\n                        m.parentElement.removeChild( m );\n                    }\n                }\n            }\n        }\n\n    };\n\n} )( document, window );\n\n/**\n * Common utility functions\n *\n * Copyright 2011-2012 Bartek Szopka (@bartaz)\n * Henrik Ingo (c) 2016\n * MIT License\n */\n\n( function( document, window ) {\n    \"use strict\";\n    var roots = [];\n\n    var libraryFactory = function( rootId ) {\n        if ( roots[ rootId ] ) {\n            return roots[ rootId ];\n        }\n\n        // `$` returns first element for given CSS `selector` in the `context` of\n        // the given element or whole document.\n        var $ = function( selector, context ) {\n            context = context || document;\n            return context.querySelector( selector );\n        };\n\n        // `$$` return an array of elements for given CSS `selector` in the `context` of\n        // the given element or whole document.\n        var $$ = function( selector, context ) {\n            context = context || document;\n            return arrayify( context.querySelectorAll( selector ) );\n        };\n\n        // `arrayify` takes an array-like object and turns it into real Array\n        // to make all the Array.prototype goodness available.\n        var arrayify = function( a ) {\n            return [].slice.call( a );\n        };\n\n        // `byId` returns element with given `id` - you probably have guessed that ;)\n        var byId = function( id ) {\n            return document.getElementById( id );\n        };\n\n        // `getElementFromHash` returns an element located by id from hash part of\n        // window location.\n        var getElementFromHash = function() {\n\n            // Get id from url # by removing `#` or `#/` from the beginning,\n            // so both \"fallback\" `#slide-id` and \"enhanced\" `#/slide-id` will work\n            return byId( window.location.hash.replace( /^#\\/?/, \"\" ) );\n        };\n\n        // Throttling function calls, by Remy Sharp\n        // http://remysharp.com/2010/07/21/throttling-function-calls/\n        var throttle = function( fn, delay ) {\n            var timer = null;\n            return function() {\n                var context = this, args = arguments;\n                window.clearTimeout( timer );\n                timer = window.setTimeout( function() {\n                    fn.apply( context, args );\n                }, delay );\n            };\n        };\n\n        // `toNumber` takes a value given as `numeric` parameter and tries to turn\n        // it into a number. If it is not possible it returns 0 (or other value\n        // given as `fallback`).\n        var toNumber = function( numeric, fallback ) {\n            return isNaN( numeric ) ? ( fallback || 0 ) : Number( numeric );\n        };\n\n        // `triggerEvent` builds a custom DOM event with given `eventName` and `detail` data\n        // and triggers it on element given as `el`.\n        var triggerEvent = function( el, eventName, detail ) {\n            var event = document.createEvent( \"CustomEvent\" );\n            event.initCustomEvent( eventName, true, true, detail );\n            el.dispatchEvent( event );\n        };\n\n        var lib = {\n            $: $,\n            $$: $$,\n            arrayify: arrayify,\n            byId: byId,\n            getElementFromHash: getElementFromHash,\n            throttle: throttle,\n            toNumber: toNumber,\n            triggerEvent: triggerEvent\n        };\n        roots[ rootId ] = lib;\n        return lib;\n    };\n\n    // Let impress core know about the existence of this library\n    window.impress.addLibraryFactory( { util: libraryFactory } );\n\n} )( document, window );\n\n/**\n * Autoplay plugin - Automatically advance slideshow after N seconds\n *\n * Copyright 2016 Henrik Ingo, henrik.ingo@avoinelama.fi\n * Released under the MIT license.\n */\n/* global clearTimeout, setTimeout, document */\n\n( function( document ) {\n    \"use strict\";\n\n    var autoplayDefault = 0;\n    var currentStepTimeout = 0;\n    var api = null;\n    var timeoutHandle = null;\n    var root = null;\n    var util;\n\n    // On impress:init, check whether there is a default setting, as well as\n    // handle step-1.\n    document.addEventListener( \"impress:init\", function( event ) {\n        util = event.detail.api.lib.util;\n\n        // Getting API from event data instead of global impress().init().\n        // You don't even need to know what is the id of the root element\n        // or anything. `impress:init` event data gives you everything you\n        // need to control the presentation that was just initialized.\n        api = event.detail.api;\n        root = event.target;\n\n        // Element attributes starting with \"data-\", become available under\n        // element.dataset. In addition hyphenized words become camelCased.\n        var data = root.dataset;\n\n        if ( data.autoplay ) {\n            autoplayDefault = util.toNumber( data.autoplay, 0 );\n        }\n\n        var toolbar = document.querySelector( \"#impress-toolbar\" );\n        if ( toolbar ) {\n            addToolbarButton( toolbar );\n        }\n\n        api.lib.gc.pushCallback( function() {\n            clearTimeout( timeoutHandle );\n        } );\n\n        // Note that right after impress:init event, also impress:stepenter is\n        // triggered for the first slide, so that's where code flow continues.\n    }, false );\n\n    // If default autoplay time was defined in the presentation root, or\n    // in this step, set timeout.\n    var reloadTimeout = function( event ) {\n        var step = event.target;\n        currentStepTimeout = util.toNumber( step.dataset.autoplay, autoplayDefault );\n        if ( status === \"paused\" ) {\n            setAutoplayTimeout( 0 );\n        } else {\n            setAutoplayTimeout( currentStepTimeout );\n        }\n    };\n\n    document.addEventListener( \"impress:stepenter\", function( event ) {\n        reloadTimeout( event );\n    }, false );\n\n    document.addEventListener( \"impress:substep:stepleaveaborted\", function( event ) {\n        reloadTimeout( event );\n    }, false );\n\n    /**\n     * Set timeout after which we move to next() step.\n     */\n    var setAutoplayTimeout = function( timeout ) {\n        if ( timeoutHandle ) {\n            clearTimeout( timeoutHandle );\n        }\n\n        if ( timeout > 0 ) {\n            timeoutHandle = setTimeout( function() { api.next(); }, timeout * 1000 );\n        }\n        setButtonText();\n    };\n\n    /*** Toolbar plugin integration *******************************************/\n    var status = \"not clicked\";\n    var toolbarButton = null;\n\n    // Copied from core impress.js. Good candidate for moving to a utilities collection.\n    var triggerEvent = function( el, eventName, detail ) {\n        var event = document.createEvent( \"CustomEvent\" );\n        event.initCustomEvent( eventName, true, true, detail );\n        el.dispatchEvent( event );\n    };\n\n    var makeDomElement = function( html ) {\n        var tempDiv = document.createElement( \"div\" );\n        tempDiv.innerHTML = html;\n        return tempDiv.firstChild;\n    };\n\n    var toggleStatus = function() {\n        if ( currentStepTimeout > 0 && status !== \"paused\" ) {\n            status = \"paused\";\n        } else {\n            status = \"playing\";\n        }\n    };\n\n    var getButtonText = function() {\n        if ( currentStepTimeout > 0 && status !== \"paused\" ) {\n            return \"||\"; // Pause\n        } else {\n            return \"&#9654;\"; // Play\n        }\n    };\n\n    var setButtonText = function() {\n        if ( toolbarButton ) {\n\n            // Keep button size the same even if label content is changing\n            var buttonWidth = toolbarButton.offsetWidth;\n            var buttonHeight = toolbarButton.offsetHeight;\n            toolbarButton.innerHTML = getButtonText();\n            if ( !toolbarButton.style.width ) {\n                toolbarButton.style.width = buttonWidth + \"px\";\n            }\n            if ( !toolbarButton.style.height ) {\n                toolbarButton.style.height = buttonHeight + \"px\";\n            }\n        }\n    };\n\n    var addToolbarButton = function( toolbar ) {\n        var html = '<button id=\"impress-autoplay-playpause\" ' + // jshint ignore:line\n                   'title=\"Autoplay\" class=\"impress-autoplay\">' + // jshint ignore:line\n                   getButtonText() + \"</button>\"; // jshint ignore:line\n        toolbarButton = makeDomElement( html );\n        toolbarButton.addEventListener( \"click\", function() {\n            toggleStatus();\n            if ( status === \"playing\" ) {\n                if ( autoplayDefault === 0 ) {\n                    autoplayDefault = 7;\n                }\n                if ( currentStepTimeout === 0 ) {\n                    currentStepTimeout = autoplayDefault;\n                }\n                setAutoplayTimeout( currentStepTimeout );\n            } else if ( status === \"paused\" ) {\n                setAutoplayTimeout( 0 );\n            }\n        } );\n\n        triggerEvent( toolbar, \"impress:toolbar:appendChild\",\n                      { group: 10, element: toolbarButton } );\n    };\n\n} )( document );\n\n/**\n * Blackout plugin\n *\n * Press Ctrl+b to hide all slides, and Ctrl+b again to show them.\n * Also navigating to a different slide will show them again (impress:stepleave).\n *\n * Copyright 2014 @Strikeskids\n * Released under the MIT license.\n */\n/* global document */\n\n( function( document ) {\n    \"use strict\";\n\n    var canvas = null;\n    var blackedOut = false;\n\n    // While waiting for a shared library of utilities, copying these 2 from main impress.js\n    var css = function( el, props ) {\n        var key, pkey;\n        for ( key in props ) {\n            if ( props.hasOwnProperty( key ) ) {\n                pkey = pfx( key );\n                if ( pkey !== null ) {\n                    el.style[ pkey ] = props[ key ];\n                }\n            }\n        }\n        return el;\n    };\n\n    var pfx = ( function() {\n\n        var style = document.createElement( \"dummy\" ).style,\n            prefixes = \"Webkit Moz O ms Khtml\".split( \" \" ),\n            memory = {};\n\n        return function( prop ) {\n            if ( typeof memory[ prop ] === \"undefined\" ) {\n\n                var ucProp  = prop.charAt( 0 ).toUpperCase() + prop.substr( 1 ),\n                    props   = ( prop + \" \" + prefixes.join( ucProp + \" \" ) + ucProp ).split( \" \" );\n\n                memory[ prop ] = null;\n                for ( var i in props ) {\n                    if ( style[ props[ i ] ] !== undefined ) {\n                        memory[ prop ] = props[ i ];\n                        break;\n                    }\n                }\n\n            }\n\n            return memory[ prop ];\n        };\n\n    } )();\n\n    var removeBlackout = function() {\n        if ( blackedOut ) {\n            css( canvas, {\n                display: \"block\"\n            } );\n            blackedOut = false;\n        }\n    };\n\n    var blackout = function() {\n        if ( blackedOut ) {\n            removeBlackout();\n        } else {\n            css( canvas, {\n                display: ( blackedOut = !blackedOut ) ? \"none\" : \"block\"\n            } );\n            blackedOut = true;\n        }\n    };\n\n    // Wait for impress.js to be initialized\n    document.addEventListener( \"impress:init\", function( event ) {\n        var api = event.detail.api;\n        var root = event.target;\n        canvas = root.firstElementChild;\n        var gc = api.lib.gc;\n\n        gc.addEventListener( document, \"keydown\", function( event ) {\n            if ( event.keyCode === 66 ) {\n                event.preventDefault();\n                if ( !blackedOut ) {\n                    blackout();\n                } else {\n                    removeBlackout();\n                }\n            }\n        }, false );\n\n        gc.addEventListener( document, \"keyup\", function( event ) {\n            if ( event.keyCode === 66 ) {\n                event.preventDefault();\n            }\n        }, false );\n\n    }, false );\n\n    document.addEventListener( \"impress:stepleave\", function() {\n        removeBlackout();\n    }, false );\n\n} )( document );\n\n\n/**\n * Extras Plugin\n *\n * This plugin performs initialization (like calling mermaid.initialize())\n * for the extras/ plugins if they are loaded into a presentation.\n *\n * See README.md for details.\n *\n * Copyright 2016 Henrik Ingo (@henrikingo)\n * Released under the MIT license.\n */\n/* global markdown, hljs, mermaid, impress, document, window */\n\n( function( document, window ) {\n    \"use strict\";\n\n    var preInit = function() {\n        if ( window.markdown ) {\n\n            // Unlike the other extras, Markdown.js doesn't by default do anything in\n            // particular. We do it ourselves here.\n            // In addition, we use \"-----\" as a delimiter for new slide.\n\n            // Query all .markdown elements and translate to HTML\n            var markdownDivs = document.querySelectorAll( \".markdown\" );\n            for ( var idx = 0; idx < markdownDivs.length; idx++ ) {\n              var element = markdownDivs[ idx ];\n\n              var slides = element.textContent.split( /^-----$/m );\n              var i = slides.length - 1;\n              element.innerHTML = markdown.toHTML( slides[ i ] );\n\n              // If there's an id, unset it for last, and all other, elements,\n              // and then set it for the first.\n              var id = null;\n              if ( element.id ) {\n                id = element.id;\n                element.id = \"\";\n              }\n              i--;\n              while ( i >= 0 ) {\n                var newElement = element.cloneNode( false );\n                newElement.innerHTML = markdown.toHTML( slides[ i ] );\n                element.parentNode.insertBefore( newElement, element );\n                element = newElement;\n                i--;\n              }\n              if ( id !== null ) {\n                element.id = id;\n              }\n            }\n        } // Markdown\n\n        if ( window.hljs ) {\n            hljs.initHighlightingOnLoad();\n        }\n\n        if ( window.mermaid ) {\n            mermaid.initialize( { startOnLoad:true } );\n        }\n    };\n\n    // Register the plugin to be called in pre-init phase\n    // Note: Markdown.js should run early/first, because it creates new div elements.\n    // So add this with a lower-than-default weight.\n    impress.addPreInitPlugin( preInit, 1 );\n\n} )( document, window );\n\n\n/**\n * Form support\n *\n * Functionality to better support use of input, textarea, button... elements in a presentation.\n *\n * This plugin does two things:\n *\n * Set stopPropagation on any element that might take text input. This allows users to type, for\n * example, the letter 'P' into a form field, without causing the presenter console to spring up.\n *\n * On impress:stepleave, de-focus any potentially active\n * element. This is to prevent the focus from being left in a form element that is no longer visible\n * in the window, and user therefore typing garbage into the form.\n *\n * TODO: Currently it is not possible to use TAB to navigate between form elements. Impress.js, and\n * in particular the navigation plugin, unfortunately must fully take control of the tab key,\n * otherwise a user could cause the browser to scroll to a link or button that's not on the current\n * step. However, it could be possible to allow tab navigation between form elements, as long as\n * they are on the active step. This is a topic for further study.\n *\n * Copyright 2016 Henrik Ingo\n * MIT License\n */\n/* global document */\n( function( document ) {\n    \"use strict\";\n    var root;\n    var api;\n\n    document.addEventListener( \"impress:init\", function( event ) {\n        root = event.target;\n        api = event.detail.api;\n        var gc = api.lib.gc;\n\n        var selectors = [ \"input[type=text]\", \"textarea\", \"select\", \"[contenteditable=true]\" ];\n        for ( var selector of selectors ) {\n            var elements = document.querySelectorAll( selector );\n            if ( !elements ) {\n                continue;\n            }\n\n            for ( var i = 0; i < elements.length; i++ ) {\n                var e = elements[ i ];\n                gc.addEventListener( e, \"keydown\", function( event ) {\n                    event.stopPropagation();\n                } );\n                gc.addEventListener( e, \"keyup\", function( event ) {\n                    event.stopPropagation();\n                } );\n            }\n        }\n    }, false );\n\n    document.addEventListener( \"impress:stepleave\", function() {\n        document.activeElement.blur();\n    }, false );\n\n} )( document );\n\n\n/**\n * Goto Plugin\n *\n * The goto plugin is a pre-stepleave plugin. It is executed before impress:stepleave,\n * and will alter the destination where to transition next.\n *\n * Example:\n *\n *         <!-- When leaving this step, go directly to \"step-5\" -->\n *         <div class=\"step\" data-goto=\"step-5\">\n *\n *         <!-- When leaving this step with next(), go directly to \"step-5\", instead of next step.\n *              If moving backwards to previous step - e.g. prev() instead of next() -\n *              then go to \"step-1\". -->\n *         <div class=\"step\" data-goto-next=\"step-5\" data-goto-prev=\"step-1\">\n *\n *        <!-- data-goto-key-list and data-goto-next-list allow you to build advanced non-linear\n *             navigation. -->\n *        <div class=\"step\"\n *             data-goto-key-list=\"ArrowUp ArrowDown ArrowRight ArrowLeft\"\n *             data-goto-next-list=\"step-4 step-3 step-2 step-5\">\n *\n * See https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values for a table\n * of what strings to use for each key.\n *\n * Copyright 2016-2017 Henrik Ingo (@henrikingo)\n * Released under the MIT license.\n */\n/* global window, document, impress */\n\n( function( document, window ) {\n    \"use strict\";\n    var lib;\n\n    document.addEventListener( \"impress:init\", function( event ) {\n        lib = event.detail.api.lib;\n    }, false );\n\n    var isNumber = function( numeric ) {\n        return !isNaN( numeric );\n    };\n\n    var goto = function( event ) {\n        if ( ( !event ) || ( !event.target ) ) {\n            return;\n        }\n\n        var data = event.target.dataset;\n        var steps = document.querySelectorAll( \".step\" );\n\n        // Data-goto-key-list=\"\" & data-goto-next-list=\"\" //////////////////////////////////////////\n        if ( data.gotoKeyList !== undefined &&\n             data.gotoNextList !== undefined &&\n             event.origEvent !== undefined &&\n             event.origEvent.key !== undefined ) {\n            var keylist = data.gotoKeyList.split( \" \" );\n            var nextlist = data.gotoNextList.split( \" \" );\n\n            if ( keylist.length !== nextlist.length ) {\n                window.console.log(\n                    \"impress goto plugin: data-goto-key-list and data-goto-next-list don't match:\"\n                );\n                window.console.log( keylist );\n                window.console.log( nextlist );\n\n                // Don't return, allow the other categories to work despite this error\n            } else {\n                var index = keylist.indexOf( event.origEvent.key );\n                if ( index >= 0 ) {\n                    var next = nextlist[ index ];\n                    if ( isNumber( next ) ) {\n                        event.detail.next = steps[ next ];\n\n                        // If the new next element has its own transitionDuration, we're responsible\n                        // for setting that on the event as well\n                        event.detail.transitionDuration = lib.util.toNumber(\n                            event.detail.next.dataset.transitionDuration,\n                            event.detail.transitionDuration\n                        );\n                        return;\n                    } else {\n                        var newTarget = document.getElementById( next );\n                        if ( newTarget && newTarget.classList.contains( \"step\" ) ) {\n                            event.detail.next = newTarget;\n                            event.detail.transitionDuration = lib.util.toNumber(\n                                event.detail.next.dataset.transitionDuration,\n                                event.detail.transitionDuration\n                            );\n                            return;\n                        } else {\n                            window.console.log( \"impress goto plugin: \" + next +\n                                                \" is not a step in this impress presentation.\" );\n                        }\n                    }\n                }\n            }\n        }\n\n        // Data-goto-next=\"\" & data-goto-prev=\"\" ///////////////////////////////////////////////////\n\n        // Handle event.target data-goto-next attribute\n        if ( isNumber( data.gotoNext ) && event.detail.reason === \"next\" ) {\n            event.detail.next = steps[ data.gotoNext ];\n\n            // If the new next element has its own transitionDuration, we're responsible for setting\n            // that on the event as well\n            event.detail.transitionDuration = lib.util.toNumber(\n                event.detail.next.dataset.transitionDuration, event.detail.transitionDuration\n            );\n            return;\n        }\n        if ( data.gotoNext && event.detail.reason === \"next\" ) {\n            var newTarget = document.getElementById( data.gotoNext ); // jshint ignore:line\n            if ( newTarget && newTarget.classList.contains( \"step\" ) ) {\n                event.detail.next = newTarget;\n                event.detail.transitionDuration = lib.util.toNumber(\n                    event.detail.next.dataset.transitionDuration,\n                    event.detail.transitionDuration\n                );\n                return;\n            } else {\n                window.console.log( \"impress goto plugin: \" + data.gotoNext +\n                                    \" is not a step in this impress presentation.\" );\n            }\n        }\n\n        // Handle event.target data-goto-prev attribute\n        if ( isNumber( data.gotoPrev ) && event.detail.reason === \"prev\" ) {\n            event.detail.next = steps[ data.gotoPrev ];\n            event.detail.transitionDuration = lib.util.toNumber(\n                event.detail.next.dataset.transitionDuration, event.detail.transitionDuration\n            );\n            return;\n        }\n        if ( data.gotoPrev && event.detail.reason === \"prev\" ) {\n            var newTarget = document.getElementById( data.gotoPrev ); // jshint ignore:line\n            if ( newTarget && newTarget.classList.contains( \"step\" ) ) {\n                event.detail.next = newTarget;\n                event.detail.transitionDuration = lib.util.toNumber(\n                    event.detail.next.dataset.transitionDuration, event.detail.transitionDuration\n                );\n                return;\n            } else {\n                window.console.log( \"impress goto plugin: \" + data.gotoPrev +\n                                    \" is not a step in this impress presentation.\" );\n            }\n        }\n\n        // Data-goto=\"\" ///////////////////////////////////////////////////////////////////////////\n\n        // Handle event.target data-goto attribute\n        if ( isNumber( data.goto ) ) {\n            event.detail.next = steps[ data.goto ];\n            event.detail.transitionDuration = lib.util.toNumber(\n                event.detail.next.dataset.transitionDuration, event.detail.transitionDuration\n            );\n            return;\n        }\n        if ( data.goto ) {\n            var newTarget = document.getElementById( data.goto ); // jshint ignore:line\n            if ( newTarget && newTarget.classList.contains( \"step\" ) ) {\n                event.detail.next = newTarget;\n                event.detail.transitionDuration = lib.util.toNumber(\n                    event.detail.next.dataset.transitionDuration, event.detail.transitionDuration\n                );\n                return;\n            } else {\n                window.console.log( \"impress goto plugin: \" + data.goto +\n                                    \" is not a step in this impress presentation.\" );\n            }\n        }\n    };\n\n    // Register the plugin to be called in pre-stepleave phase\n    impress.addPreStepLeavePlugin( goto );\n\n} )( document, window );\n\n\n/**\n * Help popup plugin\n *\n * Example:\n *\n *     <!-- Show a help popup at start, or if user presses \"H\" -->\n *     <div id=\"impress-help\"></div>\n *\n * For developers:\n *\n * Typical use for this plugin, is for plugins that support some keypress, to add a line\n * to the help popup produced by this plugin. For example \"P: Presenter console\".\n *\n * Copyright 2016 Henrik Ingo (@henrikingo)\n * Released under the MIT license.\n */\n/* global window, document */\n\n( function( document, window ) {\n    \"use strict\";\n    var rows = [];\n    var timeoutHandle;\n\n    var triggerEvent = function( el, eventName, detail ) {\n        var event = document.createEvent( \"CustomEvent\" );\n        event.initCustomEvent( eventName, true, true, detail );\n        el.dispatchEvent( event );\n    };\n\n    var renderHelpDiv = function() {\n        var helpDiv = document.getElementById( \"impress-help\" );\n        if ( helpDiv ) {\n            var html = [];\n            for ( var row in rows ) {\n                for ( var arrayItem in row ) {\n                    html.push( rows[ row ][ arrayItem ] );\n                }\n            }\n            if ( html ) {\n                helpDiv.innerHTML = \"<table>\\n\" + html.join( \"\\n\" ) + \"</table>\\n\";\n            }\n        }\n    };\n\n    var toggleHelp = function() {\n        var helpDiv = document.getElementById( \"impress-help\" );\n        if ( !helpDiv ) {\n            return;\n        }\n\n        if ( helpDiv.style.display === \"block\" ) {\n            helpDiv.style.display = \"none\";\n        } else {\n            helpDiv.style.display = \"block\";\n            window.clearTimeout( timeoutHandle );\n        }\n    };\n\n    document.addEventListener( \"keyup\", function( event ) {\n\n        if ( event.keyCode === 72 ) { // \"h\"\n            event.preventDefault();\n            toggleHelp();\n        }\n    }, false );\n\n    // API\n    // Other plugins can add help texts, typically if they support an action on a keypress.\n    /**\n     * Add a help text to the help popup.\n     *\n     * :param: e.detail.command  Example: \"H\"\n     * :param: e.detail.text     Example: \"Show this help.\"\n     * :param: e.detail.row      Row index from 0 to 9 where to place this help text. Example: 0\n     */\n    document.addEventListener( \"impress:help:add\", function( e ) {\n\n        // The idea is for the sender of the event to supply a unique row index, used for sorting.\n        // But just in case two plugins would ever use the same row index, we wrap each row into\n        // its own array. If there are more than one entry for the same index, they are shown in\n        // first come, first serve ordering.\n        var rowIndex = e.detail.row;\n        if ( typeof rows[ rowIndex ] !== \"object\" || !rows[ rowIndex ].isArray ) {\n            rows[ rowIndex ] = [];\n        }\n        rows[ e.detail.row ].push( \"<tr><td><strong>\" + e.detail.command + \"</strong></td><td>\" +\n                                   e.detail.text + \"</td></tr>\" );\n        renderHelpDiv();\n    } );\n\n    document.addEventListener( \"impress:init\", function( e ) {\n        renderHelpDiv();\n\n        // At start, show the help for 7 seconds.\n        var helpDiv = document.getElementById( \"impress-help\" );\n        if ( helpDiv ) {\n            helpDiv.style.display = \"block\";\n            timeoutHandle = window.setTimeout( function() {\n                var helpDiv = document.getElementById( \"impress-help\" );\n                helpDiv.style.display = \"none\";\n            }, 7000 );\n\n            // Regster callback to empty the help div on teardown\n            var api = e.detail.api;\n            api.lib.gc.pushCallback( function() {\n                window.clearTimeout( timeoutHandle );\n                helpDiv.style.display = \"\";\n                helpDiv.innerHTML = \"\";\n                rows = [];\n            } );\n        }\n\n        // Use our own API to register the help text for \"h\"\n        triggerEvent( document, \"impress:help:add\",\n                      { command: \"H\", text: \"Show this help\", row: 0 } );\n    } );\n\n} )( document, window );\n\n\n/**\n * Adds a presenter console to impress.js\n *\n * MIT Licensed, see license.txt.\n *\n * Copyright 2012, 2013, 2015 impress-console contributors (see README.txt)\n *\n * version: 1.3-dev\n *\n */\n\n// This file contains so much HTML, that we will just respectfully disagree about js\n/* jshint quotmark:single */\n/* global navigator, top, setInterval, clearInterval, document, window */\n\n( function( document, window ) {\n    'use strict';\n\n    // TODO: Move this to src/lib/util.js\n    var triggerEvent = function( el, eventName, detail ) {\n        var event = document.createEvent( 'CustomEvent' );\n        event.initCustomEvent( eventName, true, true, detail );\n        el.dispatchEvent( event );\n    };\n\n    // Create Language object depending on browsers language setting\n    var lang;\n    switch ( navigator.language ) {\n    case 'de':\n        lang = {\n            'noNotes': '<div class=\"noNotes\">Keine Notizen hierzu</div>',\n            'restart': 'Neustart',\n            'clickToOpen': 'Klicken um Sprecherkonsole zu öffnen',\n            'prev': 'zurück',\n            'next': 'weiter',\n            'loading': 'initalisiere',\n            'ready': 'Bereit',\n            'moving': 'in Bewegung',\n            'useAMPM': false\n        };\n        break;\n    case 'en': // jshint ignore:line\n    default : // jshint ignore:line\n        lang = {\n            'noNotes': '<div class=\"noNotes\">No notes for this step</div>',\n            'restart': 'Restart',\n            'clickToOpen': 'Click to open speaker console',\n            'prev': 'Prev',\n            'next': 'Next',\n            'loading': 'Loading',\n            'ready': 'Ready',\n            'moving': 'Moving',\n            'useAMPM': false\n        };\n        break;\n    }\n\n    // Settings to set iframe in speaker console\n    const preViewDefaultFactor = 0.7;\n    const preViewMinimumFactor = 0.5;\n    const preViewGap    = 4;\n\n    // This is the default template for the speaker console window\n    const consoleTemplate = '<!DOCTYPE html>' +\n        '<html id=\"impressconsole\"><head>' +\n\n          // Order is important: If user provides a cssFile, those will win, because they're later\n          '{{cssStyle}}' +\n          '{{cssLink}}' +\n        '</head><body>' +\n        '<div id=\"console\">' +\n          '<div id=\"views\">' +\n            '<iframe id=\"slideView\" scrolling=\"no\"></iframe>' +\n            '<iframe id=\"preView\" scrolling=\"no\"></iframe>' +\n            '<div id=\"blocker\"></div>' +\n          '</div>' +\n          '<div id=\"notes\"></div>' +\n        '</div>' +\n        '<div id=\"controls\"> ' +\n          '<div id=\"prev\"><a  href=\"#\" onclick=\"impress().prev(); return false;\" />' +\n            '{{prev}}</a></div>' +\n          '<div id=\"next\"><a  href=\"#\" onclick=\"impress().next(); return false;\" />' +\n            '{{next}}</a></div>' +\n          '<div id=\"clock\">--:--</div>' +\n          '<div id=\"timer\" onclick=\"timerReset()\">00m 00s</div>' +\n          '<div id=\"status\">{{loading}}</div>' +\n        '</div>' +\n        '</body></html>';\n\n    // Default css location\n    var cssFileOldDefault = 'css/impressConsole.css';\n    var cssFile = undefined; // jshint ignore:line\n\n    // Css for styling iframs on the console\n    var cssFileIframeOldDefault = 'css/iframe.css';\n    var cssFileIframe = undefined; // jshint ignore:line\n\n    // All console windows, so that you can call impressConsole() repeatedly.\n    var allConsoles = {};\n\n    // Zero padding helper function:\n    var zeroPad = function( i ) {\n        return ( i < 10 ? '0' : '' ) + i;\n    };\n\n    // The console object\n    var impressConsole = window.impressConsole = function( rootId ) {\n\n        rootId = rootId || 'impress';\n\n        if ( allConsoles[ rootId ] ) {\n            return allConsoles[ rootId ];\n        }\n\n        // Root presentation elements\n        var root = document.getElementById( rootId );\n\n        var consoleWindow = null;\n\n        var nextStep = function() {\n            var classes = '';\n            var nextElement = document.querySelector( '.active' );\n\n            // Return to parents as long as there is no next sibling\n            while ( !nextElement.nextElementSibling && nextElement.parentNode ) {\n                nextElement = nextElement.parentNode;\n            }\n            nextElement = nextElement.nextElementSibling;\n            while ( nextElement ) {\n                classes = nextElement.attributes[ 'class' ];\n                if ( classes && classes.value.indexOf( 'step' ) !== -1 ) {\n                    consoleWindow.document.getElementById( 'blocker' ).innerHTML = lang.next;\n                    return nextElement;\n                }\n\n                if ( nextElement.firstElementChild ) { // First go into deep\n                    nextElement = nextElement.firstElementChild;\n                } else {\n\n                    // Go to next sibling or through parents until there is a next sibling\n                    while ( !nextElement.nextElementSibling && nextElement.parentNode ) {\n                        nextElement = nextElement.parentNode;\n                    }\n                    nextElement = nextElement.nextElementSibling;\n                }\n            }\n\n            // No next element. Pick the first\n            consoleWindow.document.getElementById( 'blocker' ).innerHTML = lang.restart;\n            return document.querySelector( '.step' );\n        };\n\n        // Sync the notes to the step\n        var onStepLeave = function() {\n            if ( consoleWindow ) {\n\n                // Set notes to next steps notes.\n                var newNotes = document.querySelector( '.active' ).querySelector( '.notes' );\n                if ( newNotes ) {\n                    newNotes = newNotes.innerHTML;\n                } else {\n                    newNotes = lang.noNotes;\n                }\n                consoleWindow.document.getElementById( 'notes' ).innerHTML = newNotes;\n\n                // Set the views\n                var baseURL = document.URL.substring( 0, document.URL.search( '#/' ) );\n                var slideSrc = baseURL + '#' + document.querySelector( '.active' ).id;\n                var preSrc = baseURL + '#' + nextStep().id;\n                var slideView = consoleWindow.document.getElementById( 'slideView' );\n\n                // Setting them when they are already set causes glithes in Firefox, so check first:\n                if ( slideView.src !== slideSrc ) {\n                    slideView.src = slideSrc;\n                }\n                var preView = consoleWindow.document.getElementById( 'preView' );\n                if ( preView.src !== preSrc ) {\n                    preView.src = preSrc;\n                }\n\n                consoleWindow.document.getElementById( 'status' ).innerHTML =\n                    '<span class=\"moving\">' + lang.moving + '</span>';\n            }\n        };\n\n        // Sync the previews to the step\n        var onStepEnter = function() {\n            if ( consoleWindow ) {\n\n                // We do everything here again, because if you stopped the previos step to\n                // early, the onstepleave trigger is not called for that step, so\n                // we need this to sync things.\n                var newNotes = document.querySelector( '.active' ).querySelector( '.notes' );\n                if ( newNotes ) {\n                    newNotes = newNotes.innerHTML;\n                } else {\n                    newNotes = lang.noNotes;\n                }\n                var notes = consoleWindow.document.getElementById( 'notes' );\n                notes.innerHTML = newNotes;\n                notes.scrollTop = 0;\n\n                // Set the views\n                var baseURL = document.URL.substring( 0, document.URL.search( '#/' ) );\n                var slideSrc = baseURL + '#' + document.querySelector( '.active' ).id;\n                var preSrc = baseURL + '#' + nextStep().id;\n                var slideView = consoleWindow.document.getElementById( 'slideView' );\n\n                // Setting them when they are already set causes glithes in Firefox, so check first:\n                if ( slideView.src !== slideSrc ) {\n                    slideView.src = slideSrc;\n                }\n                var preView = consoleWindow.document.getElementById( 'preView' );\n                if ( preView.src !== preSrc ) {\n                    preView.src = preSrc;\n                }\n\n                consoleWindow.document.getElementById( 'status' ).innerHTML =\n                    '<span  class=\"ready\">' + lang.ready + '</span>';\n            }\n        };\n\n        // Sync substeps\n        var onSubstep = function( event ) {\n            if ( consoleWindow ) {\n                if ( event.detail.reason === 'next' ) {\n                    onSubstepShow();\n                }\n                if ( event.detail.reason === 'prev' ) {\n                    onSubstepHide();\n                }\n            }\n        };\n\n        var onSubstepShow = function() {\n            var slideView = consoleWindow.document.getElementById( 'slideView' );\n            triggerEventInView( slideView, 'impress:substep:show' );\n        };\n\n        var onSubstepHide = function() {\n            var slideView = consoleWindow.document.getElementById( 'slideView' );\n            triggerEventInView( slideView, 'impress:substep:hide' );\n        };\n\n        var triggerEventInView = function( frame, eventName, detail ) {\n\n            // Note: Unfortunately Chrome does not allow createEvent on file:// URLs, so this won't\n            // work. This does work on Firefox, and should work if viewing the presentation on a\n            // http:// URL on Chrome.\n            var event = frame.contentDocument.createEvent( 'CustomEvent' );\n            event.initCustomEvent( eventName, true, true, detail );\n            frame.contentDocument.dispatchEvent( event );\n        };\n\n        var spaceHandler = function() {\n            var notes = consoleWindow.document.getElementById( 'notes' );\n            if ( notes.scrollTopMax - notes.scrollTop > 20 ) {\n               notes.scrollTop = notes.scrollTop + notes.clientHeight * 0.8;\n            } else {\n               window.impress().next();\n            }\n        };\n\n        var timerReset = function() {\n            consoleWindow.timerStart = new Date();\n        };\n\n        // Show a clock\n        var clockTick = function() {\n            var now = new Date();\n            var hours = now.getHours();\n            var minutes = now.getMinutes();\n            var seconds = now.getSeconds();\n            var ampm = '';\n\n            if ( lang.useAMPM ) {\n                ampm = ( hours < 12 ) ? 'AM' : 'PM';\n                hours = ( hours > 12 ) ? hours - 12 : hours;\n                hours = ( hours === 0 ) ? 12 : hours;\n            }\n\n            // Clock\n            var clockStr = zeroPad( hours ) + ':' + zeroPad( minutes ) + ':' + zeroPad( seconds ) +\n                           ' ' + ampm;\n            consoleWindow.document.getElementById( 'clock' ).firstChild.nodeValue = clockStr;\n\n            // Timer\n            seconds = Math.floor( ( now - consoleWindow.timerStart ) / 1000 );\n            minutes = Math.floor( seconds / 60 );\n            seconds = Math.floor( seconds % 60 );\n            consoleWindow.document.getElementById( 'timer' ).firstChild.nodeValue =\n                zeroPad( minutes ) + 'm ' + zeroPad( seconds ) + 's';\n\n            if ( !consoleWindow.initialized ) {\n\n                // Nudge the slide windows after load, or they will scrolled wrong on Firefox.\n                consoleWindow.document.getElementById( 'slideView' ).contentWindow.scrollTo( 0, 0 );\n                consoleWindow.document.getElementById( 'preView' ).contentWindow.scrollTo( 0, 0 );\n                consoleWindow.initialized = true;\n            }\n        };\n\n        var registerKeyEvent = function( keyCodes, handler, window ) {\n            if ( window === undefined ) {\n                window = consoleWindow;\n            }\n\n            // Prevent default keydown action when one of supported key is pressed\n            window.document.addEventListener( 'keydown', function( event ) {\n                if ( !event.ctrlKey && !event.altKey && !event.shiftKey && !event.metaKey &&\n                     keyCodes.indexOf( event.keyCode ) !== -1 ) {\n                    event.preventDefault();\n                }\n            }, false );\n\n            // Trigger impress action on keyup\n            window.document.addEventListener( 'keyup', function( event ) {\n                if ( !event.ctrlKey && !event.altKey && !event.shiftKey && !event.metaKey &&\n                     keyCodes.indexOf( event.keyCode ) !== -1 ) {\n                        handler();\n                        event.preventDefault();\n                }\n            }, false );\n        };\n\n        var consoleOnLoad = function() {\n                var slideView = consoleWindow.document.getElementById( 'slideView' );\n                var preView = consoleWindow.document.getElementById( 'preView' );\n\n                // Firefox:\n                slideView.contentDocument.body.classList.add( 'impress-console' );\n                preView.contentDocument.body.classList.add( 'impress-console' );\n                if ( cssFileIframe !== undefined ) {\n                    slideView.contentDocument.head.insertAdjacentHTML(\n                        'beforeend',\n                        '<link rel=\"stylesheet\" type=\"text/css\" href=\"' + cssFileIframe + '\">'\n                    );\n                    preView.contentDocument.head.insertAdjacentHTML(\n                        'beforeend',\n                        '<link rel=\"stylesheet\" type=\"text/css\" href=\"' + cssFileIframe + '\">'\n                    );\n                }\n\n                // Chrome:\n                slideView.addEventListener( 'load', function() {\n                        slideView.contentDocument.body.classList.add( 'impress-console' );\n                        if ( cssFileIframe !== undefined ) {\n                            slideView.contentDocument.head.insertAdjacentHTML(\n                                'beforeend',\n                                '<link rel=\"stylesheet\" type=\"text/css\" href=\"' +\n                                    cssFileIframe + '\">'\n                            );\n                        }\n                } );\n                preView.addEventListener( 'load', function() {\n                        preView.contentDocument.body.classList.add( 'impress-console' );\n                        if ( cssFileIframe !== undefined ) {\n                            preView.contentDocument.head.insertAdjacentHTML(\n                                'beforeend',\n                                '<link rel=\"stylesheet\" type=\"text/css\" href=\"' +\n                                    cssFileIframe + '\">' );\n                        }\n                } );\n        };\n\n        var open = function() {\n            if ( top.isconsoleWindow ) {\n                return;\n            }\n\n            if ( consoleWindow && !consoleWindow.closed ) {\n                consoleWindow.focus();\n            } else {\n                consoleWindow = window.open( '', 'impressConsole' );\n\n                // If opening failes this may be because the browser prevents this from\n                // not (or less) interactive JavaScript...\n                if ( consoleWindow == null ) {\n\n                    // ... so I add a button to klick.\n                    // workaround on firefox\n                    var message = document.createElement( 'div' );\n                    message.id = 'impress-console-button';\n                    message.style.position = 'fixed';\n                    message.style.left = 0;\n                    message.style.top = 0;\n                    message.style.right = 0;\n                    message.style.bottom = 0;\n                    message.style.backgroundColor = 'rgba(255, 255, 255, 0.9)';\n                    var clickStr = 'var x = document.getElementById(\\'impress-console-button\\');' +\n                                     'x.parentNode.removeChild(x);' +\n                                     'var r = document.getElementById(\\'' + rootId + '\\');' +\n                                     'impress(\\'' + rootId +\n                                     '\\').lib.util.triggerEvent(r, \\'impress:console:open\\', {})';\n                    var styleStr = 'margin: 25vh 25vw;width:50vw;height:50vh;';\n                    message.innerHTML = '<button style=\"' + styleStr + '\" ' +\n                                                 'onclick=\"' + clickStr + '\">' +\n                                        lang.clickToOpen +\n                                        '</button>';\n                    document.body.appendChild( message );\n                    return;\n                }\n\n                var cssLink = '';\n                if ( cssFile !== undefined ) {\n                    cssLink = '<link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" href=\"' +\n                              cssFile + '\">';\n                }\n\n                // This sets the window location to the main window location, so css can be loaded:\n                consoleWindow.document.open();\n\n                // Write the template:\n                consoleWindow.document.write(\n\n                    // CssStyleStr is lots of inline <style></style> defined at the end of this file\n                    consoleTemplate.replace( '{{cssStyle}}', cssStyleStr() )\n                                   .replace( '{{cssLink}}', cssLink )\n                                   .replace( /{{.*?}}/gi, function( x ) {\n                                       return lang[ x.substring( 2, x.length - 2 ) ]; }\n                                   )\n                );\n                consoleWindow.document.title = 'Speaker Console (' + document.title + ')';\n                consoleWindow.impress = window.impress;\n\n                // We set this flag so we can detect it later, to prevent infinite popups.\n                consoleWindow.isconsoleWindow = true;\n\n                // Set the onload function:\n                consoleWindow.onload = consoleOnLoad;\n\n                // Add clock tick\n                consoleWindow.timerStart = new Date();\n                consoleWindow.timerReset = timerReset;\n                consoleWindow.clockInterval = setInterval( allConsoles[ rootId ].clockTick, 1000 );\n\n                // Keyboard navigation handlers\n                // 33: pg up, 37: left, 38: up\n                registerKeyEvent( [ 33, 37, 38 ], window.impress().prev );\n\n                // 34: pg down, 39: right, 40: down\n                registerKeyEvent( [ 34, 39, 40 ], window.impress().next );\n\n                // 32: space\n                registerKeyEvent( [ 32 ], spaceHandler );\n\n                // 82: R\n                registerKeyEvent( [ 82 ], timerReset );\n\n                // Cleanup\n                consoleWindow.onbeforeunload = function() {\n\n                    // I don't know why onunload doesn't work here.\n                    clearInterval( consoleWindow.clockInterval );\n                };\n\n                // It will need a little nudge on Firefox, but only after loading:\n                onStepEnter();\n                consoleWindow.initialized = false;\n                consoleWindow.document.close();\n\n                //Catch any window resize to pass size on\n                window.onresize = resize;\n                consoleWindow.onresize = resize;\n\n                return consoleWindow;\n            }\n        };\n\n        var resize = function() {\n            var slideView = consoleWindow.document.getElementById( 'slideView' );\n            var preView = consoleWindow.document.getElementById( 'preView' );\n\n            // Get ratio of presentation\n            var ratio = window.innerHeight / window.innerWidth;\n\n            // Get size available for views\n            var views = consoleWindow.document.getElementById( 'views' );\n\n            // SlideView may have a border or some padding:\n            // asuming same border width on both direktions\n            var delta = slideView.offsetWidth - slideView.clientWidth;\n\n            // Set views\n            var slideViewWidth = ( views.clientWidth - delta );\n            var slideViewHeight = Math.floor( slideViewWidth * ratio );\n\n            var preViewTop = slideViewHeight + preViewGap;\n\n            var preViewWidth = Math.floor( slideViewWidth * preViewDefaultFactor );\n            var preViewHeight = Math.floor( slideViewHeight * preViewDefaultFactor );\n\n            // Shrink preview to fit into space available\n            if ( views.clientHeight - delta < preViewTop + preViewHeight ) {\n                preViewHeight = views.clientHeight - delta - preViewTop;\n                preViewWidth = Math.floor( preViewHeight / ratio );\n            }\n\n            // If preview is not high enough forget ratios!\n            if ( preViewWidth <= Math.floor( slideViewWidth * preViewMinimumFactor ) ) {\n                slideViewWidth = ( views.clientWidth - delta );\n                slideViewHeight = Math.floor( ( views.clientHeight - delta - preViewGap ) /\n                                             ( 1 + preViewMinimumFactor ) );\n\n                preViewTop = slideViewHeight + preViewGap;\n\n                preViewWidth = Math.floor( slideViewWidth * preViewMinimumFactor );\n                preViewHeight = views.clientHeight - delta - preViewTop;\n            }\n\n            // Set the calculated into styles\n            slideView.style.width = slideViewWidth + 'px';\n            slideView.style.height = slideViewHeight + 'px';\n\n            preView.style.top = preViewTop + 'px';\n\n            preView.style.width = preViewWidth + 'px';\n            preView.style.height = preViewHeight + 'px';\n        };\n\n        var _init = function( cssConsole, cssIframe ) {\n            if ( cssConsole !== undefined ) {\n                cssFile = cssConsole;\n            }\n\n            // You can also specify the css in the presentation root div:\n            // <div id=\"impress\" data-console-css=...\" data-console-css-iframe=\"...\">\n            else if ( root.dataset.consoleCss !== undefined ) {\n                cssFile = root.dataset.consoleCss;\n            }\n\n            if ( cssIframe !== undefined ) {\n                cssFileIframe = cssIframe;\n            } else if ( root.dataset.consoleCssIframe !== undefined ) {\n                cssFileIframe = root.dataset.consoleCssIframe;\n            }\n\n            // Register the event\n            root.addEventListener( 'impress:stepleave', onStepLeave );\n            root.addEventListener( 'impress:stepenter', onStepEnter );\n            root.addEventListener( 'impress:substep:stepleaveaborted', onSubstep );\n            root.addEventListener( 'impress:substep:show', onSubstepShow );\n            root.addEventListener( 'impress:substep:hide', onSubstepHide );\n\n            //When the window closes, clean up after ourselves.\n            window.onunload = function() {\n                if ( consoleWindow && !consoleWindow.closed ) {\n                    consoleWindow.close();\n                }\n            };\n\n            //Open speaker console when they press 'p'\n            registerKeyEvent( [ 80 ], open, window );\n\n            //Btw, you can also launch console automatically:\n            //<div id=\"impress\" data-console-autolaunch=\"true\">\n            if ( root.dataset.consoleAutolaunch === 'true' ) {\n                window.open();\n            }\n        };\n\n        var init = function( cssConsole, cssIframe ) {\n            if ( ( cssConsole === undefined || cssConsole === cssFileOldDefault ) &&\n                 ( cssIframe === undefined  || cssIframe === cssFileIframeOldDefault ) ) {\n                window.console.log( 'impressConsole().init() is deprecated. ' +\n                                   'impressConsole is now initialized automatically when you ' +\n                                   'call impress().init().' );\n            }\n            _init( cssConsole, cssIframe );\n        };\n\n        // New API for impress.js plugins is based on using events\n        root.addEventListener( 'impress:console:open', function() {\n            open();\n        } );\n\n        /**\n         * Register a key code to an event handler\n         *\n         * :param: event.detail.keyCodes    List of key codes\n         * :param: event.detail.handler     A function registered as the event handler\n         * :param: event.detail.window      The console window to register the keycode in\n         */\n        root.addEventListener( 'impress:console:registerKeyEvent', function( event ) {\n            registerKeyEvent( event.detail.keyCodes, event.detail.handler, event.detail.window );\n        } );\n\n        // Return the object\n        allConsoles[ rootId ] = { init: init, open: open, clockTick: clockTick,\n                               registerKeyEvent: registerKeyEvent, _init: _init };\n        return allConsoles[ rootId ];\n\n    };\n\n    // This initializes impressConsole automatically when initializing impress itself\n    document.addEventListener( 'impress:init', function( event ) {\n\n        // Note: impressConsole wants the id string, not the DOM element directly\n        impressConsole( event.target.id )._init();\n\n        // Add 'P' to the help popup\n        triggerEvent( document, 'impress:help:add',\n                        { command: 'P', text: 'Presenter console', row: 10 } );\n    } );\n\n    // Returns a string to be used inline as a css <style> element in the console window.\n    // Apologies for length, but hiding it here at the end to keep it away from rest of the code.\n    var cssStyleStr = function() {\n        return `<style>\n            #impressconsole body {\n                background-color: rgb(255, 255, 255);\n                padding: 0;\n                margin: 0;\n                font-family: verdana, arial, sans-serif;\n                font-size: 2vw;\n            }\n\n            #impressconsole div#console {\n                position: absolute;\n                top: 0.5vw;\n                left: 0.5vw;\n                right: 0.5vw;\n                bottom: 3vw;\n                margin: 0;\n            }\n\n            #impressconsole div#views, #impressconsole div#notes {\n                position: absolute;\n                top: 0;\n                bottom: 0;\n            }\n\n            #impressconsole div#views {\n                left: 0;\n                right: 50vw;\n                overflow: hidden;\n            }\n\n            #impressconsole div#blocker {\n                position: absolute;\n                right: 0;\n                bottom: 0;\n            }\n\n            #impressconsole div#notes {\n                left: 50vw;\n                right: 0;\n                overflow-x: hidden;\n                overflow-y: auto;\n                padding: 0.3ex;\n                background-color: rgb(255, 255, 255);\n                border: solid 1px rgb(120, 120, 120);\n            }\n\n            #impressconsole div#notes .noNotes {\n                color: rgb(200, 200, 200);\n            }\n\n            #impressconsole div#notes p {\n                margin-top: 0;\n            }\n\n            #impressconsole iframe {\n                position: absolute;\n                margin: 0;\n                padding: 0;\n                left: 0;\n                border: solid 1px rgb(120, 120, 120);\n            }\n\n            #impressconsole iframe#slideView {\n                top: 0;\n                width: 49vw;\n                height: 49vh;\n            }\n\n            #impressconsole iframe#preView {\n                opacity: 0.7;\n                top: 50vh;\n                width: 30vw;\n                height: 30vh;\n            }\n\n            #impressconsole div#controls {\n                margin: 0;\n                position: absolute;\n                bottom: 0.25vw;\n                left: 0.5vw;\n                right: 0.5vw;\n                height: 2.5vw;\n                background-color: rgb(255, 255, 255);\n                background-color: rgba(255, 255, 255, 0.6);\n            }\n\n            #impressconsole div#prev, div#next {\n            }\n\n            #impressconsole div#prev a, #impressconsole div#next a {\n                display: block;\n                border: solid 1px rgb(70, 70, 70);\n                border-radius: 0.5vw;\n                font-size: 1.5vw;\n                padding: 0.25vw;\n                text-decoration: none;\n                background-color: rgb(220, 220, 220);\n                color: rgb(0, 0, 0);\n            }\n\n            #impressconsole div#prev a:hover, #impressconsole div#next a:hover {\n                background-color: rgb(245, 245, 245);\n            }\n\n            #impressconsole div#prev {\n                float: left;\n            }\n\n            #impressconsole div#next {\n                float: right;\n            }\n\n            #impressconsole div#status {\n                margin-left: 2em;\n                margin-right: 2em;\n                text-align: center;\n                float: right;\n            }\n\n            #impressconsole div#clock {\n                margin-left: 2em;\n                margin-right: 2em;\n                text-align: center;\n                float: left;\n            }\n\n            #impressconsole div#timer {\n                margin-left: 2em;\n                margin-right: 2em;\n                text-align: center;\n                float: left;\n            }\n\n            #impressconsole span.moving {\n                color: rgb(255, 0, 0);\n            }\n\n            #impressconsole span.ready {\n                color: rgb(0, 128, 0);\n            }\n        </style>`;\n    };\n\n} )( document, window );\n\n/**\n * Mobile devices support\n *\n * Allow presentation creators to hide all but 3 slides, to save resources, particularly on mobile\n * devices, using classes body.impress-mobile, .step.prev, .step.active and .step.next.\n *\n * Note: This plugin does not take into account possible redirections done with skip, goto etc\n * plugins. Basically it wouldn't work as intended in such cases, but the active step will at least\n * be correct.\n *\n * Adapted to a plugin from a submission by @Kzeni:\n * https://github.com/impress/impress.js/issues/333\n */\n/* global document, navigator */\n( function( document ) {\n    \"use strict\";\n\n    var getNextStep = function( el ) {\n        var steps = document.querySelectorAll( \".step\" );\n        for ( var i = 0; i < steps.length; i++ ) {\n            if ( steps[ i ] === el ) {\n                if ( i + 1 < steps.length ) {\n                    return steps[ i + 1 ];\n                } else {\n                    return steps[ 0 ];\n                }\n            }\n        }\n    };\n    var getPrevStep = function( el ) {\n        var steps = document.querySelectorAll( \".step\" );\n        for ( var i = steps.length - 1; i >= 0; i-- ) {\n            if ( steps[ i ] === el ) {\n                if ( i - 1 >= 0 ) {\n                    return steps[ i - 1 ];\n                } else {\n                    return steps[ steps.length - 1 ];\n                }\n            }\n        }\n    };\n\n    // Detect mobile browsers & add CSS class as appropriate.\n    document.addEventListener( \"impress:init\", function( event ) {\n        var body = document.body;\n        if ( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n                 navigator.userAgent\n             ) ) {\n            body.classList.add( \"impress-mobile\" );\n        }\n\n        // Unset all this on teardown\n        var api = event.detail.api;\n        api.lib.gc.pushCallback( function() {\n            document.body.classList.remove( \"impress-mobile\" );\n            var prev = document.getElementsByClassName( \"prev\" )[ 0 ];\n            var next = document.getElementsByClassName( \"next\" )[ 0 ];\n            if ( typeof prev !== \"undefined\" ) {\n                prev.classList.remove( \"prev\" );\n            }\n            if ( typeof next !== \"undefined\" ) {\n                next.classList.remove( \"next\" );\n            }\n        } );\n    } );\n\n    // Add prev and next classes to the siblings of the newly entered active step element\n    // Remove prev and next classes from their current step elements\n    // Note: As an exception we break namespacing rules, as these are useful general purpose\n    // classes. (Naming rules would require us to use css classes mobile-next and mobile-prev,\n    // based on plugin name.)\n    document.addEventListener( \"impress:stepenter\", function( event ) {\n\t      var oldprev = document.getElementsByClassName( \"prev\" )[ 0 ];\n\t      var oldnext = document.getElementsByClassName( \"next\" )[ 0 ];\n\n\t      var prev = getPrevStep( event.target );\n\t      prev.classList.add( \"prev\" );\n\t      var next = getNextStep( event.target );\n\t      next.classList.add( \"next\" );\n\n\t      if ( typeof oldprev !== \"undefined\" ) {\n\t\t      oldprev.classList.remove( \"prev\" );\n              }\n\t      if ( typeof oldnext !== \"undefined\" ) {\n\t\t      oldnext.classList.remove( \"next\" );\n              }\n    } );\n} )( document );\n\n\n/**\n * Mouse timeout plugin\n *\n * After 3 seconds of mouse inactivity, add the css class\n * `body.impress-mouse-timeout`. On `mousemove`, `click` or `touch`, remove the\n * class.\n *\n * The use case for this plugin is to use CSS to hide elements from the screen\n * and only make them visible when the mouse is moved. Examples where this\n * might be used are: the toolbar from the toolbar plugin, and the mouse cursor\n * itself.\n *\n * Example CSS:\n *\n *     body.impress-mouse-timeout {\n *         cursor: none;\n *     }\n *     body.impress-mouse-timeout div#impress-toolbar {\n *         display: none;\n *     }\n *\n *\n * Copyright 2016 Henrik Ingo (@henrikingo)\n * Released under the MIT license.\n */\n/* global window, document */\n( function( document, window ) {\n    \"use strict\";\n    var timeout = 3;\n    var timeoutHandle;\n\n    var hide = function() {\n\n        // Mouse is now inactive\n        document.body.classList.add( \"impress-mouse-timeout\" );\n    };\n\n    var show = function() {\n        if ( timeoutHandle ) {\n            window.clearTimeout( timeoutHandle );\n        }\n\n        // Mouse is now active\n        document.body.classList.remove( \"impress-mouse-timeout\" );\n\n        // Then set new timeout after which it is considered inactive again\n        timeoutHandle = window.setTimeout( hide, timeout * 1000 );\n    };\n\n    document.addEventListener( \"impress:init\", function( event ) {\n        var api = event.detail.api;\n        var gc = api.lib.gc;\n        gc.addEventListener( document, \"mousemove\", show );\n        gc.addEventListener( document, \"click\", show );\n        gc.addEventListener( document, \"touch\", show );\n\n        // Set first timeout\n        show();\n\n        // Unset all this on teardown\n        gc.pushCallback( function() {\n            window.clearTimeout( timeoutHandle );\n            document.body.classList.remove( \"impress-mouse-timeout\" );\n        } );\n    }, false );\n\n} )( document, window );\n\n/**\n * Navigation events plugin\n *\n * As you can see this part is separate from the impress.js core code.\n * It's because these navigation actions only need what impress.js provides with\n * its simple API.\n *\n * This plugin is what we call an _init plugin_. It's a simple kind of\n * impress.js plugin. When loaded, it starts listening to the `impress:init`\n * event. That event listener initializes the plugin functionality - in this\n * case we listen to some keypress and mouse events. The only dependencies on\n * core impress.js functionality is the `impress:init` method, as well as using\n * the public api `next(), prev(),` etc when keys are pressed.\n *\n * Copyright 2011-2012 Bartek Szopka (@bartaz)\n * Released under the MIT license.\n * ------------------------------------------------\n *  author:  Bartek Szopka\n *  version: 0.5.3\n *  url:     http://bartaz.github.com/impress.js/\n *  source:  http://github.com/bartaz/impress.js/\n *\n */\n/* global document */\n( function( document ) {\n    \"use strict\";\n\n    // Wait for impress.js to be initialized\n    document.addEventListener( \"impress:init\", function( event ) {\n\n        // Getting API from event data.\n        // So you don't event need to know what is the id of the root element\n        // or anything. `impress:init` event data gives you everything you\n        // need to control the presentation that was just initialized.\n        var api = event.detail.api;\n        var gc = api.lib.gc;\n        var util = api.lib.util;\n\n        // Supported keys are:\n        // [space] - quite common in presentation software to move forward\n        // [up] [right] / [down] [left] - again common and natural addition,\n        // [pgdown] / [pgup] - often triggered by remote controllers,\n        // [tab] - this one is quite controversial, but the reason it ended up on\n        //   this list is quite an interesting story... Remember that strange part\n        //   in the impress.js code where window is scrolled to 0,0 on every presentation\n        //   step, because sometimes browser scrolls viewport because of the focused element?\n        //   Well, the [tab] key by default navigates around focusable elements, so clicking\n        //   it very often caused scrolling to focused element and breaking impress.js\n        //   positioning. I didn't want to just prevent this default action, so I used [tab]\n        //   as another way to moving to next step... And yes, I know that for the sake of\n        //   consistency I should add [shift+tab] as opposite action...\n        var isNavigationEvent = function( event ) {\n\n            // Don't trigger navigation for example when user returns to browser window with ALT+TAB\n            if ( event.altKey || event.ctrlKey || event.metaKey ) {\n                return false;\n            }\n\n            // In the case of TAB, we force step navigation always, overriding the browser\n            // navigation between input elements, buttons and links.\n            if ( event.keyCode === 9 ) {\n                return true;\n            }\n\n            // With the sole exception of TAB, we also ignore keys pressed if shift is down.\n            if ( event.shiftKey ) {\n                return false;\n            }\n\n            if ( ( event.keyCode >= 32 && event.keyCode <= 34 ) ||\n                 ( event.keyCode >= 37 && event.keyCode <= 40 ) ) {\n                return true;\n            }\n        };\n\n        // KEYBOARD NAVIGATION HANDLERS\n\n        // Prevent default keydown action when one of supported key is pressed.\n        gc.addEventListener( document, \"keydown\", function( event ) {\n            if ( isNavigationEvent( event ) ) {\n                event.preventDefault();\n            }\n        }, false );\n\n        // Trigger impress action (next or prev) on keyup.\n        gc.addEventListener( document, \"keyup\", function( event ) {\n            if ( isNavigationEvent( event ) ) {\n                if ( event.shiftKey ) {\n                    switch ( event.keyCode ) {\n                        case 9: // Shift+tab\n                            api.prev();\n                            break;\n                    }\n                } else {\n                    switch ( event.keyCode ) {\n                        case 33: // Pg up\n                        case 37: // Left\n                        case 38: // Up\n                                 api.prev( event );\n                                 break;\n                        case 9:  // Tab\n                        case 32: // Space\n                        case 34: // Pg down\n                        case 39: // Right\n                        case 40: // Down\n                                 api.next( event );\n                                 break;\n                    }\n                }\n                event.preventDefault();\n            }\n        }, false );\n\n        // Delegated handler for clicking on the links to presentation steps\n        gc.addEventListener( document, \"click\", function( event ) {\n\n            // Event delegation with \"bubbling\"\n            // check if event target (or any of its parents is a link)\n            var target = event.target;\n            try {\n                while ( ( target.tagName !== \"A\" ) &&\n                        ( target !== document.documentElement ) ) {\n                    target = target.parentNode;\n                }\n\n                if ( target.tagName === \"A\" ) {\n                    var href = target.getAttribute( \"href\" );\n\n                    // If it's a link to presentation step, target this step\n                    if ( href && href[ 0 ] === \"#\" ) {\n                        target = document.getElementById( href.slice( 1 ) );\n                    }\n                }\n\n                if ( api.goto( target ) ) {\n                    event.stopImmediatePropagation();\n                    event.preventDefault();\n                }\n            }\n            catch ( err ) {\n\n                // For example, when clicking on the button to launch speaker console, the button\n                // is immediately deleted from the DOM. In this case target is a DOM element when\n                // we get it, but turns out to be null if you try to actually do anything with it.\n                if ( err instanceof TypeError &&\n                     err.message === \"target is null\" ) {\n                    return;\n                }\n                throw err;\n            }\n        }, false );\n\n        // Delegated handler for clicking on step elements\n        gc.addEventListener( document, \"click\", function( event ) {\n            var target = event.target;\n            try {\n\n                // Find closest step element that is not active\n                while ( !( target.classList.contains( \"step\" ) &&\n                        !target.classList.contains( \"active\" ) ) &&\n                        ( target !== document.documentElement ) ) {\n                    target = target.parentNode;\n                }\n\n                if ( api.goto( target ) ) {\n                    event.preventDefault();\n                }\n            }\n            catch ( err ) {\n\n                // For example, when clicking on the button to launch speaker console, the button\n                // is immediately deleted from the DOM. In this case target is a DOM element when\n                // we get it, but turns out to be null if you try to actually do anything with it.\n                if ( err instanceof TypeError &&\n                     err.message === \"target is null\" ) {\n                    return;\n                }\n                throw err;\n            }\n        }, false );\n\n        // Add a line to the help popup\n        util.triggerEvent( document, \"impress:help:add\", { command: \"Left &amp; Right\",\n                                                           text: \"Previous &amp; Next step\",\n                                                           row: 1 } );\n\n    }, false );\n\n} )( document );\n\n\n/**\n * Navigation UI plugin\n *\n * This plugin provides UI elements \"back\", \"forward\" and a list to select\n * a specific slide number.\n *\n * The navigation controls are added to the toolbar plugin via DOM events. User must enable the\n * toolbar in a presentation to have them visible.\n *\n * Copyright 2016 Henrik Ingo (@henrikingo)\n * Released under the MIT license.\n */\n\n// This file contains so much HTML, that we will just respectfully disagree about js\n/* jshint quotmark:single */\n/* global document */\n\n( function( document ) {\n    'use strict';\n    var toolbar;\n    var api;\n    var root;\n    var steps;\n    var hideSteps = [];\n    var prev;\n    var select;\n    var next;\n\n    var triggerEvent = function( el, eventName, detail ) {\n        var event = document.createEvent( 'CustomEvent' );\n        event.initCustomEvent( eventName, true, true, detail );\n        el.dispatchEvent( event );\n    };\n\n    var makeDomElement = function( html ) {\n        var tempDiv = document.createElement( 'div' );\n        tempDiv.innerHTML = html;\n        return tempDiv.firstChild;\n    };\n\n    var selectOptionsHtml = function() {\n        var options = '';\n        for ( var i = 0; i < steps.length; i++ ) {\n\n            // Omit steps that are listed as hidden from select widget\n            if ( hideSteps.indexOf( steps[ i ] ) < 0 ) {\n                options = options + '<option value=\"' + steps[ i ].id + '\">' + // jshint ignore:line\n                                    steps[ i ].id + '</option>' + '\\n'; // jshint ignore:line\n            }\n        }\n        return options;\n    };\n\n    var addNavigationControls = function( event ) {\n        api = event.detail.api;\n        var gc = api.lib.gc;\n        root = event.target;\n        steps = root.querySelectorAll( '.step' );\n\n        var prevHtml   = '<button id=\"impress-navigation-ui-prev\" title=\"Previous\" ' +\n                         'class=\"impress-navigation-ui\">&lt;</button>';\n        var selectHtml = '<select id=\"impress-navigation-ui-select\" title=\"Go to\" ' +\n                         'class=\"impress-navigation-ui\">' + '\\n' +\n                           selectOptionsHtml() +\n                           '</select>';\n        var nextHtml   = '<button id=\"impress-navigation-ui-next\" title=\"Next\" ' +\n                         'class=\"impress-navigation-ui\">&gt;</button>';\n\n        prev = makeDomElement( prevHtml );\n        prev.addEventListener( 'click',\n            function() {\n                api.prev();\n        } );\n        select = makeDomElement( selectHtml );\n        select.addEventListener( 'change',\n            function( event ) {\n                api.goto( event.target.value );\n        } );\n        gc.addEventListener( root, 'impress:steprefresh', function( event ) {\n\n            // As impress.js core now allows to dynamically edit the steps, including adding,\n            // removing, and reordering steps, we need to requery and redraw the select list on\n            // every stepenter event.\n            steps = root.querySelectorAll( '.step' );\n            select.innerHTML = '\\n' + selectOptionsHtml();\n\n            // Make sure the list always shows the step we're actually on, even if it wasn't\n            // selected from the list\n            select.value = event.target.id;\n        } );\n        next = makeDomElement( nextHtml );\n        next.addEventListener( 'click',\n            function() {\n                api.next();\n        } );\n\n        triggerEvent( toolbar, 'impress:toolbar:appendChild', { group: 0, element: prev } );\n        triggerEvent( toolbar, 'impress:toolbar:appendChild', { group: 0, element: select } );\n        triggerEvent( toolbar, 'impress:toolbar:appendChild', { group: 0, element: next } );\n\n    };\n\n    // API for not listing given step in the select widget.\n    // For example, if you set class=\"skip\" on some element, you may not want it to show up in the\n    // list either. Otoh we cannot assume that, or anything else, so steps that user wants omitted\n    // must be specifically added with this API call.\n    document.addEventListener( 'impress:navigation-ui:hideStep', function( event ) {\n        hideSteps.push( event.target );\n        if ( select ) {\n            select.innerHTML = selectOptionsHtml();\n        }\n    }, false );\n\n    // Wait for impress.js to be initialized\n    document.addEventListener( 'impress:init', function( event ) {\n        toolbar = document.querySelector( '#impress-toolbar' );\n        if ( toolbar ) {\n            addNavigationControls( event );\n        }\n    }, false );\n\n} )( document );\n\n\n/* global document */\n( function( document ) {\n    \"use strict\";\n    var root;\n    var stepids = [];\n\n    // Get stepids from the steps under impress root\n    var getSteps = function() {\n        stepids = [];\n        var steps = root.querySelectorAll( \".step\" );\n        for ( var i = 0; i < steps.length; i++ )\n        {\n          stepids[ i + 1 ] = steps[ i ].id;\n        }\n        };\n\n    // Wait for impress.js to be initialized\n    document.addEventListener( \"impress:init\", function( event ) {\n            root = event.target;\n        getSteps();\n        var gc = event.detail.api.lib.gc;\n        gc.pushCallback( function() {\n            stepids = [];\n            if ( progressbar ) {\n                progressbar.style.width = \"\";\n                        }\n            if ( progress ) {\n                progress.innerHTML = \"\";\n                        }\n        } );\n    } );\n\n    var progressbar = document.querySelector( \"div.impress-progressbar div\" );\n    var progress = document.querySelector( \"div.impress-progress\" );\n\n    if ( null !== progressbar || null !== progress ) {\n        document.addEventListener( \"impress:stepleave\", function( event ) {\n            updateProgressbar( event.detail.next.id );\n        } );\n\n        document.addEventListener( \"impress:steprefresh\", function( event ) {\n            getSteps();\n            updateProgressbar( event.target.id );\n        } );\n\n    }\n\n    function updateProgressbar( slideId ) {\n        var slideNumber = stepids.indexOf( slideId );\n        if ( null !== progressbar ) {\n                        var width = 100 / ( stepids.length - 1 ) * ( slideNumber );\n            progressbar.style.width = width.toFixed( 2 ) + \"%\";\n        }\n        if ( null !== progress ) {\n            progress.innerHTML = slideNumber + \"/\" + ( stepids.length - 1 );\n        }\n    }\n} )( document );\n\n/**\n * Relative Positioning Plugin\n *\n * This plugin provides support for defining the coordinates of a step relative\n * to the previous step. This is often more convenient when creating presentations,\n * since as you add, remove or move steps, you may not need to edit the positions\n * as much as is the case with the absolute coordinates supported by impress.js\n * core.\n *\n * Example:\n *\n *         <!-- Position step 1000 px to the right and 500 px up from the previous step. -->\n *         <div class=\"step\" data-rel-x=\"1000\" data-rel-y=\"500\">\n *\n * Following html attributes are supported for step elements:\n *\n *     data-rel-x\n *     data-rel-y\n *     data-rel-z\n *\n * These values are also inherited from the previous step. This makes it easy to\n * create a boring presentation where each slide shifts for example 1000px down\n * from the previous.\n *\n * In addition to plain numbers, which are pixel values, it is also possible to\n * define relative positions as a multiple of screen height and width, using\n * a unit of \"h\" and \"w\", respectively, appended to the number.\n *\n * Example:\n *\n *        <div class=\"step\" data-rel-x=\"1.5w\" data-rel-y=\"1.5h\">\n *\n * This plugin is a *pre-init plugin*. It is called synchronously from impress.js\n * core at the beginning of `impress().init()`. This allows it to process its own\n * data attributes first, and possibly alter the data-x, data-y and data-z attributes\n * that will then be processed by `impress().init()`.\n *\n * (Another name for this kind of plugin might be called a *filter plugin*, but\n * *pre-init plugin* is more generic, as a plugin might do whatever it wants in\n * the pre-init stage.)\n *\n * Copyright 2016 Henrik Ingo (@henrikingo)\n * Released under the MIT license.\n */\n\n/* global document, window */\n\n( function( document, window ) {\n    \"use strict\";\n\n    var startingState = {};\n\n    /**\n     * Copied from core impress.js. We currently lack a library mechanism to\n     * to share utility functions like this.\n     */\n    var toNumber = function( numeric, fallback ) {\n        return isNaN( numeric ) ? ( fallback || 0 ) : Number( numeric );\n    };\n\n    /**\n     * Extends toNumber() to correctly compute also relative-to-screen-size values 5w and 5h.\n     *\n     * Returns the computed value in pixels with w/h postfix removed.\n     */\n    var toNumberAdvanced = function( numeric, fallback ) {\n        if ( typeof numeric !== \"string\" ) {\n            return toNumber( numeric, fallback );\n        }\n        var ratio = numeric.match( /^([+-]*[\\d\\.]+)([wh])$/ );\n        if ( ratio == null ) {\n            return toNumber( numeric, fallback );\n        } else {\n            var value = parseFloat( ratio[ 1 ] );\n            var multiplier = ratio[ 2 ] === \"w\" ? window.innerWidth : window.innerHeight;\n            return value * multiplier;\n        }\n    };\n\n    var computeRelativePositions = function( el, prev ) {\n        var data = el.dataset;\n\n        if ( !prev ) {\n\n            // For the first step, inherit these defaults\n            prev = { x:0, y:0, z:0, relative: { x:0, y:0, z:0 } };\n        }\n\n        var step = {\n                x: toNumber( data.x, prev.x ),\n                y: toNumber( data.y, prev.y ),\n                z: toNumber( data.z, prev.z ),\n                relative: {\n                    x: toNumberAdvanced( data.relX, prev.relative.x ),\n                    y: toNumberAdvanced( data.relY, prev.relative.y ),\n                    z: toNumberAdvanced( data.relZ, prev.relative.z )\n                }\n            };\n\n        // Relative position is ignored/zero if absolute is given.\n        // Note that this also has the effect of resetting any inherited relative values.\n        if ( data.x !== undefined ) {\n            step.relative.x = 0;\n        }\n        if ( data.y !== undefined ) {\n            step.relative.y = 0;\n        }\n        if ( data.z !== undefined ) {\n            step.relative.z = 0;\n        }\n\n        // Apply relative position to absolute position, if non-zero\n        // Note that at this point, the relative values contain a number value of pixels.\n        step.x = step.x + step.relative.x;\n        step.y = step.y + step.relative.y;\n        step.z = step.z + step.relative.z;\n\n        return step;\n    };\n\n    var rel = function( root ) {\n        var steps = root.querySelectorAll( \".step\" );\n        var prev;\n        startingState[ root.id ] = [];\n        for ( var i = 0; i < steps.length; i++ ) {\n            var el = steps[ i ];\n            startingState[ root.id ].push( {\n                el: el,\n                x: el.getAttribute( \"data-x\" ),\n                y: el.getAttribute( \"data-y\" ),\n                z: el.getAttribute( \"data-z\" )\n            } );\n            var step = computeRelativePositions( el, prev );\n\n            // Apply relative position (if non-zero)\n            el.setAttribute( \"data-x\", step.x );\n            el.setAttribute( \"data-y\", step.y );\n            el.setAttribute( \"data-z\", step.z );\n            prev = step;\n        }\n    };\n\n    // Register the plugin to be called in pre-init phase\n    window.impress.addPreInitPlugin( rel );\n\n    // Register teardown callback to reset the data.x, .y, .z values.\n    document.addEventListener( \"impress:init\", function( event ) {\n        var root = event.target;\n        event.detail.api.lib.gc.pushCallback( function() {\n            var steps = startingState[ root.id ];\n            var step;\n            while ( step = steps.pop() ) {\n                if ( step.x === null ) {\n                    step.el.removeAttribute( \"data-x\" );\n                } else {\n                    step.el.setAttribute( \"data-x\", step.x );\n                }\n                if ( step.y === null ) {\n                    step.el.removeAttribute( \"data-y\" );\n                } else {\n                    step.el.setAttribute( \"data-y\", step.y );\n                }\n                if ( step.z === null ) {\n                    step.el.removeAttribute( \"data-z\" );\n                } else {\n                    step.el.setAttribute( \"data-z\", step.z );\n                }\n            }\n            delete startingState[ root.id ];\n        } );\n    }, false );\n} )( document, window );\n\n\n/**\n * Resize plugin\n *\n * Rescale the presentation after a window resize.\n *\n * Copyright 2011-2012 Bartek Szopka (@bartaz)\n * Released under the MIT license.\n * ------------------------------------------------\n *  author:  Bartek Szopka\n *  version: 0.5.3\n *  url:     http://bartaz.github.com/impress.js/\n *  source:  http://github.com/bartaz/impress.js/\n *\n */\n\n/* global document, window */\n\n( function( document, window ) {\n    \"use strict\";\n\n    // Wait for impress.js to be initialized\n    document.addEventListener( \"impress:init\", function( event ) {\n        var api = event.detail.api;\n\n        // Rescale presentation when window is resized\n        api.lib.gc.addEventListener( window, \"resize\", api.lib.util.throttle( function() {\n\n            // Force going to active step again, to trigger rescaling\n            api.goto( document.querySelector( \".step.active\" ), 500 );\n        }, 250 ), false );\n    }, false );\n\n} )( document, window );\n\n\n/**\n * Skip Plugin\n *\n * Example:\n *\n *    <!-- This slide is disabled in presentations, when moving with next()\n *         and prev() commands, but you can still move directly to it, for\n *         example with a url (anything using goto()). -->\n *         <div class=\"step skip\">\n *\n * Copyright 2016 Henrik Ingo (@henrikingo)\n * Released under the MIT license.\n */\n\n/* global document, window */\n\n( function( document, window ) {\n    \"use strict\";\n    var util;\n\n    document.addEventListener( \"impress:init\", function( event ) {\n        util = event.detail.api.lib.util;\n    }, false );\n\n    var getNextStep = function( el ) {\n        var steps = document.querySelectorAll( \".step\" );\n        for ( var i = 0; i < steps.length; i++ ) {\n            if ( steps[ i ] === el ) {\n                if ( i + 1 < steps.length ) {\n                    return steps[ i + 1 ];\n                } else {\n                    return steps[ 0 ];\n                }\n            }\n        }\n    };\n    var getPrevStep = function( el ) {\n        var steps = document.querySelectorAll( \".step\" );\n        for ( var i = steps.length - 1; i >= 0; i-- ) {\n            if ( steps[ i ] === el ) {\n                if ( i - 1 >= 0 ) {\n                    return steps[ i - 1 ];\n                } else {\n                    return steps[ steps.length - 1 ];\n                }\n            }\n        }\n    };\n\n    var skip = function( event ) {\n        if ( ( !event ) || ( !event.target ) ) {\n            return;\n        }\n\n        if ( event.detail.next.classList.contains( \"skip\" ) ) {\n            if ( event.detail.reason === \"next\" ) {\n\n                // Go to the next next step instead\n                event.detail.next = getNextStep( event.detail.next );\n\n                // Recursively call this plugin again, until there's a step not to skip\n                skip( event );\n            } else if ( event.detail.reason === \"prev\" ) {\n\n                // Go to the previous previous step instead\n                event.detail.next = getPrevStep( event.detail.next );\n                skip( event );\n            }\n\n            // If the new next element has its own transitionDuration, we're responsible for setting\n            // that on the event as well\n            event.detail.transitionDuration = util.toNumber(\n                event.detail.next.dataset.transitionDuration, event.detail.transitionDuration\n            );\n        }\n    };\n\n    // Register the plugin to be called in pre-stepleave phase\n    // The weight makes this plugin run early. This is a good thing, because this plugin calls\n    // itself recursively.\n    window.impress.addPreStepLeavePlugin( skip, 1 );\n\n} )( document, window );\n\n\n/**\n * Stop Plugin\n *\n * Example:\n *\n *        <!-- Stop at this slide.\n *             (For example, when used on the last slide, this prevents the\n *             presentation from wrapping back to the beginning.) -->\n *        <div class=\"step stop\">\n *\n * Copyright 2016 Henrik Ingo (@henrikingo)\n * Released under the MIT license.\n */\n/* global document, window */\n( function( document, window ) {\n    \"use strict\";\n\n    var stop = function( event ) {\n        if ( ( !event ) || ( !event.target ) ) {\n            return;\n        }\n\n        if ( event.target.classList.contains( \"stop\" ) ) {\n            if ( event.detail.reason === \"next\" ) {\n                return false;\n            }\n        }\n    };\n\n    // Register the plugin to be called in pre-stepleave phase\n    // The weight makes this plugin run fairly early.\n    window.impress.addPreStepLeavePlugin( stop, 2 );\n\n} )( document, window );\n\n\n/**\n * Substep Plugin\n *\n * Copyright 2017 Henrik Ingo (@henrikingo)\n * Released under the MIT license.\n */\n\n/* global document, window */\n\n( function( document, window ) {\n    \"use strict\";\n\n    // Copied from core impress.js. Good candidate for moving to src/lib/util.js.\n    var triggerEvent = function( el, eventName, detail ) {\n        var event = document.createEvent( \"CustomEvent\" );\n        event.initCustomEvent( eventName, true, true, detail );\n        el.dispatchEvent( event );\n    };\n\n    var activeStep = null;\n    document.addEventListener( \"impress:stepenter\", function( event ) {\n        activeStep = event.target;\n    }, false );\n\n    var substep = function( event ) {\n        if ( ( !event ) || ( !event.target ) ) {\n            return;\n        }\n\n        var step = event.target;\n        var el; // Needed by jshint\n        if ( event.detail.reason === \"next\" ) {\n            el = showSubstepIfAny( step );\n            if ( el ) {\n\n                // Send a message to others, that we aborted a stepleave event.\n                // Autoplay will reload itself from this, as there won't be a stepenter event now.\n                triggerEvent( step, \"impress:substep:stepleaveaborted\",\n                              { reason: \"next\", substep: el } );\n\n                // Returning false aborts the stepleave event\n                return false;\n            }\n        }\n        if ( event.detail.reason === \"prev\" ) {\n            el = hideSubstepIfAny( step );\n            if ( el ) {\n                triggerEvent( step, \"impress:substep:stepleaveaborted\",\n                              { reason: \"prev\", substep: el } );\n                return false;\n            }\n        }\n    };\n\n    var showSubstepIfAny = function( step ) {\n        var substeps = step.querySelectorAll( \".substep\" );\n        var visible = step.querySelectorAll( \".substep-visible\" );\n        if ( substeps.length > 0 ) {\n            return showSubstep( substeps, visible );\n        }\n    };\n\n    var showSubstep = function( substeps, visible ) {\n        if ( visible.length < substeps.length ) {\n            var el = substeps[ visible.length ];\n            el.classList.add( \"substep-visible\" );\n            return el;\n        }\n    };\n\n    var hideSubstepIfAny = function( step ) {\n        var substeps = step.querySelectorAll( \".substep\" );\n        var visible = step.querySelectorAll( \".substep-visible\" );\n        if ( substeps.length > 0 ) {\n            return hideSubstep( visible );\n        }\n    };\n\n    var hideSubstep = function( visible ) {\n        if ( visible.length > 0 ) {\n            var el = visible[ visible.length - 1 ];\n            el.classList.remove( \"substep-visible\" );\n            return el;\n        }\n    };\n\n    // Register the plugin to be called in pre-stepleave phase.\n    // The weight makes this plugin run before other preStepLeave plugins.\n    window.impress.addPreStepLeavePlugin( substep, 1 );\n\n    // When entering a step, in particular when re-entering, make sure that all substeps are hidden\n    // at first\n    document.addEventListener( \"impress:stepenter\", function( event ) {\n        var step = event.target;\n        var visible = step.querySelectorAll( \".substep-visible\" );\n        for ( var i = 0; i < visible.length; i++ ) {\n            visible[ i ].classList.remove( \"substep-visible\" );\n        }\n    }, false );\n\n    // API for others to reveal/hide next substep ////////////////////////////////////////////////\n    document.addEventListener( \"impress:substep:show\", function() {\n        showSubstepIfAny( activeStep );\n    }, false );\n\n    document.addEventListener( \"impress:substep:hide\", function() {\n        hideSubstepIfAny( activeStep );\n    }, false );\n\n} )( document, window );\n\n\n/**\n * Support for swipe and tap on touch devices\n *\n * This plugin implements navigation for plugin devices, via swiping left/right,\n * or tapping on the left/right edges of the screen.\n *\n *\n *\n * Copyright 2015: Andrew Dunai (@and3rson)\n * Modified to a plugin, 2016: Henrik Ingo (@henrikingo)\n *\n * MIT License\n */\n/* global document, window */\n( function( document, window ) {\n    \"use strict\";\n\n    // Touch handler to detect swiping left and right based on window size.\n    // If the difference in X change is bigger than 1/20 of the screen width,\n    // we simply call an appropriate API function to complete the transition.\n    var startX = 0;\n    var lastX = 0;\n    var lastDX = 0;\n    var threshold = window.innerWidth / 20;\n\n    document.addEventListener( \"touchstart\", function( event ) {\n        lastX = startX = event.touches[ 0 ].clientX;\n    } );\n\n    document.addEventListener( \"touchmove\", function( event ) {\n         var x = event.touches[ 0 ].clientX;\n         var diff = x - startX;\n\n         // To be used in touchend\n         lastDX = lastX - x;\n         lastX = x;\n\n         window.impress().swipe( diff / window.innerWidth );\n     } );\n\n     document.addEventListener( \"touchend\", function() {\n         var totalDiff = lastX - startX;\n         if ( Math.abs( totalDiff ) > window.innerWidth / 5 && ( totalDiff * lastDX ) <= 0 ) {\n             if ( totalDiff > window.innerWidth / 5 && lastDX <= 0 ) {\n                 window.impress().prev();\n             } else if ( totalDiff < -window.innerWidth / 5 && lastDX >= 0 ) {\n                 window.impress().next();\n             }\n         } else if ( Math.abs( lastDX ) > threshold ) {\n             if ( lastDX < -threshold ) {\n                 window.impress().prev();\n             } else if ( lastDX > threshold ) {\n                 window.impress().next();\n             }\n         } else {\n\n             // No movement - move (back) to the current slide\n             window.impress().goto( document.querySelector( \"#impress .step.active\" ) );\n         }\n     } );\n\n     document.addEventListener( \"touchcancel\", function() {\n\n             // Move (back) to the current slide\n             window.impress().goto( document.querySelector( \"#impress .step.active\" ) );\n     } );\n\n} )( document, window );\n\n/**\n * Toolbar plugin\n *\n * This plugin provides a generic graphical toolbar. Other plugins that\n * want to expose a button or other widget, can add those to this toolbar.\n *\n * Using a single consolidated toolbar for all GUI widgets makes it easier\n * to position and style the toolbar rather than having to do that for lots\n * of different divs.\n *\n *\n * *** For presentation authors: *****************************************\n *\n * To add/activate the toolbar in your presentation, add this div:\n *\n *     <div id=\"impress-toolbar\"></div>\n *\n * Styling the toolbar is left to presentation author. Here's an example CSS:\n *\n *    .impress-enabled div#impress-toolbar {\n *        position: fixed;\n *        right: 1px;\n *        bottom: 1px;\n *        opacity: 0.6;\n *    }\n *    .impress-enabled div#impress-toolbar > span {\n *        margin-right: 10px;\n *    }\n *\n * The [mouse-timeout](../mouse-timeout/README.md) plugin can be leveraged to hide\n * the toolbar from sight, and only make it visible when mouse is moved.\n *\n *    body.impress-mouse-timeout div#impress-toolbar {\n *        display: none;\n *    }\n *\n *\n * *** For plugin authors **********************************************\n *\n * To add a button to the toolbar, trigger the `impress:toolbar:appendChild`\n * or `impress:toolbar:insertBefore` events as appropriate. The detail object\n * should contain following parameters:\n *\n *    { group : 1,                       // integer. Widgets with the same group are grouped inside\n *                                       // the same <span> element.\n *      html : \"<button>Click</button>\", // The html to add.\n *      callback : \"mycallback\",         // Toolbar plugin will trigger event\n *                                       // `impress:toolbar:added:mycallback` when done.\n *      before: element }                // The reference element for an insertBefore() call.\n *\n * You should also listen to the `impress:toolbar:added:mycallback` event. At\n * this point you can find the new widget in the DOM, and for example add an\n * event listener to it.\n *\n * You are free to use any integer for the group. It's ok to leave gaps. It's\n * ok to co-locate with widgets for another plugin, if you think they belong\n * together.\n *\n * See navigation-ui for an example.\n *\n * Copyright 2016 Henrik Ingo (@henrikingo)\n * Released under the MIT license.\n */\n\n/* global document */\n\n( function( document ) {\n    \"use strict\";\n    var toolbar = document.getElementById( \"impress-toolbar\" );\n    var groups = [];\n\n    /**\n     * Get the span element that is a child of toolbar, identified by index.\n     *\n     * If span element doesn't exist yet, it is created.\n     *\n     * Note: Because of Run-to-completion, this is not a race condition.\n     * https://developer.mozilla.org/en/docs/Web/JavaScript/EventLoop#Run-to-completion\n     *\n     * :param: index   Method will return the element <span id=\"impress-toolbar-group-{index}\">\n     */\n    var getGroupElement = function( index ) {\n        var id = \"impress-toolbar-group-\" + index;\n        if ( !groups[ index ] ) {\n            groups[ index ] = document.createElement( \"span\" );\n            groups[ index ].id = id;\n            var nextIndex = getNextGroupIndex( index );\n            if ( nextIndex === undefined ) {\n                toolbar.appendChild( groups[ index ] );\n            } else {\n                toolbar.insertBefore( groups[ index ], groups[ nextIndex ] );\n            }\n        }\n        return groups[ index ];\n    };\n\n    /**\n     * Get the span element from groups[] that is immediately after given index.\n     *\n     * This can be used to find the reference node for an insertBefore() call.\n     * If no element exists at a larger index, returns undefined. (In this case,\n     * you'd use appendChild() instead.)\n     *\n     * Note that index needn't itself exist in groups[].\n     */\n    var getNextGroupIndex = function( index ) {\n        var i = index + 1;\n        while ( !groups[ i ] && i < groups.length ) {\n            i++;\n        }\n        if ( i < groups.length ) {\n            return i;\n        }\n    };\n\n    // API\n    // Other plugins can add and remove buttons by sending them as events.\n    // In return, toolbar plugin will trigger events when button was added.\n    if ( toolbar ) {\n        /**\n         * Append a widget inside toolbar span element identified by given group index.\n         *\n         * :param: e.detail.group    integer specifying the span element where widget will be placed\n         * :param: e.detail.element  a dom element to add to the toolbar\n         */\n        toolbar.addEventListener( \"impress:toolbar:appendChild\", function( e ) {\n            var group = getGroupElement( e.detail.group );\n            group.appendChild( e.detail.element );\n        } );\n\n        /**\n         * Add a widget to toolbar using insertBefore() DOM method.\n         *\n         * :param: e.detail.before   the reference dom element, before which new element is added\n         * :param: e.detail.element  a dom element to add to the toolbar\n         */\n        toolbar.addEventListener( \"impress:toolbar:insertBefore\", function( e ) {\n            toolbar.insertBefore( e.detail.element, e.detail.before );\n        } );\n\n        /**\n         * Remove the widget in e.detail.remove.\n         */\n        toolbar.addEventListener( \"impress:toolbar:removeWidget\", function( e ) {\n            toolbar.removeChild( e.detail.remove );\n        } );\n\n        document.addEventListener( \"impress:init\", function( event ) {\n            var api = event.detail.api;\n            api.lib.gc.pushCallback( function() {\n                toolbar.innerHTML = \"\";\n                groups = [];\n            } );\n        } );\n    } // If toolbar\n\n} )( document );\n","\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t? self // if in worker\n\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n * MIT license http://www.opensource.org/licenses/mit-license.php/\n * @author Lea Verou http://lea.verou.me\n */\n\nvar Prism = (function (_self){\n\n// Private helper vars\nvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\nvar uniqueId = 0;\n\nvar _ = {\n\tmanual: _self.Prism && _self.Prism.manual,\n\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\tutil: {\n\t\tencode: function (tokens) {\n\t\t\tif (tokens instanceof Token) {\n\t\t\t\treturn new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\treturn tokens.map(_.util.encode);\n\t\t\t} else {\n\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t}\n\t\t},\n\n\t\ttype: function (o) {\n\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t},\n\n\t\tobjId: function (obj) {\n\t\t\tif (!obj['__id']) {\n\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t}\n\t\t\treturn obj['__id'];\n\t\t},\n\n\t\t// Deep clone a language definition (e.g. to extend it)\n\t\tclone: function deepClone(o, visited) {\n\t\t\tvar clone, id, type = _.util.type(o);\n\t\t\tvisited = visited || {};\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Object':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = {};\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn clone;\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = [];\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\to.forEach(function (v, i) {\n\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn clone;\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn o;\n\t\t\t}\n\t\t}\n\t},\n\n\tlanguages: {\n\t\textend: function (id, redef) {\n\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\tfor (var key in redef) {\n\t\t\t\tlang[key] = redef[key];\n\t\t\t}\n\n\t\t\treturn lang;\n\t\t},\n\n\t\t/**\n\t\t * Insert a token before another token in a language literal\n\t\t * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n\t\t * we cannot just provide an object, we need an object and a key.\n\t\t * @param inside The key (or language id) of the parent\n\t\t * @param before The key to insert before.\n\t\t * @param insert Object with the key/value pairs to insert\n\t\t * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n\t\t */\n\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\troot = root || _.languages;\n\t\t\tvar grammar = root[inside];\n\t\t\tvar ret = {};\n\n\t\t\tfor (var token in grammar) {\n\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar old = root[inside];\n\t\t\troot[inside] = ret;\n\n\t\t\t// Update references in other language definitions\n\t\t\t_.languages.DFS(_.languages, function(key, value) {\n\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\tthis[key] = ret;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn ret;\n\t\t},\n\n\t\t// Traverse a language definition with Depth First Search\n\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\tvisited = visited || {};\n\n\t\t\tvar objId = _.util.objId;\n\n\t\t\tfor (var i in o) {\n\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\tvar property = o[i],\n\t\t\t\t\t    propertyType = _.util.type(property);\n\n\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t}\n\t\t\t\t\telse if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tplugins: {},\n\n\thighlightAll: function(async, callback) {\n\t\t_.highlightAllUnder(document, async, callback);\n\t},\n\n\thighlightAllUnder: function(container, async, callback) {\n\t\tvar env = {\n\t\t\tcallback: callback,\n\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t};\n\n\t\t_.hooks.run(\"before-highlightall\", env);\n\n\t\tvar elements = env.elements || container.querySelectorAll(env.selector);\n\n\t\tfor (var i=0, element; element = elements[i++];) {\n\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t}\n\t},\n\n\thighlightElement: function(element, async, callback) {\n\t\t// Find language\n\t\tvar language, grammar, parent = element;\n\n\t\twhile (parent && !lang.test(parent.className)) {\n\t\t\tparent = parent.parentNode;\n\t\t}\n\n\t\tif (parent) {\n\t\t\tlanguage = (parent.className.match(lang) || [,''])[1].toLowerCase();\n\t\t\tgrammar = _.languages[language];\n\t\t}\n\n\t\t// Set language on the element, if not present\n\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n\t\tif (element.parentNode) {\n\t\t\t// Set language on the parent, for styling\n\t\t\tparent = element.parentNode;\n\n\t\t\tif (/pre/i.test(parent.nodeName)) {\n\t\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\t\t}\n\t\t}\n\n\t\tvar code = element.textContent;\n\n\t\tvar env = {\n\t\t\telement: element,\n\t\t\tlanguage: language,\n\t\t\tgrammar: grammar,\n\t\t\tcode: code\n\t\t};\n\n\t\tvar insertHighlightedCode = function (highlightedCode) {\n\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t_.hooks.run('complete', env);\n\t\t\tcallback && callback.call(env.element);\n\t\t}\n\n\t\t_.hooks.run('before-sanity-check', env);\n\n\t\tif (!env.code) {\n\t\t\t_.hooks.run('complete', env);\n\t\t\treturn;\n\t\t}\n\n\t\t_.hooks.run('before-highlight', env);\n\n\t\tif (!env.grammar) {\n\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\treturn;\n\t\t}\n\n\t\tif (async && _self.Worker) {\n\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\tworker.onmessage = function(evt) {\n\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t};\n\n\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\tlanguage: env.language,\n\t\t\t\tcode: env.code,\n\t\t\t\timmediateClose: true\n\t\t\t}));\n\t\t}\n\t\telse {\n\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t}\n\t},\n\n\thighlight: function (text, grammar, language) {\n\t\tvar env = {\n\t\t\tcode: text,\n\t\t\tgrammar: grammar,\n\t\t\tlanguage: language\n\t\t};\n\t\t_.hooks.run('before-tokenize', env);\n\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t_.hooks.run('after-tokenize', env);\n\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t},\n\n\tmatchGrammar: function (text, strarr, grammar, index, startPos, oneshot, target) {\n\t\tfor (var token in grammar) {\n\t\t\tif(!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (token == target) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = (_.util.type(patterns) === \"Array\") ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tvar pattern = patterns[j],\n\t\t\t\t\tinside = pattern.inside,\n\t\t\t\t\tlookbehind = !!pattern.lookbehind,\n\t\t\t\t\tgreedy = !!pattern.greedy,\n\t\t\t\t\tlookbehindLength = 0,\n\t\t\t\t\talias = pattern.alias;\n\n\t\t\t\tif (greedy && !pattern.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\n\t\t\t\t\tpattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");\n\t\t\t\t}\n\n\t\t\t\tpattern = pattern.pattern || pattern;\n\n\t\t\t\t// Don’t cache length as it changes during the loop\n\t\t\t\tfor (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {\n\n\t\t\t\t\tvar str = strarr[i];\n\n\t\t\t\t\tif (strarr.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (greedy && i != strarr.length - 1) {\n\t\t\t\t\t\tpattern.lastIndex = pos;\n\t\t\t\t\t\tvar match = pattern.exec(text);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index + (lookbehind ? match[1].length : 0),\n\t\t\t\t\t\t    to = match.index + match[0].length,\n\t\t\t\t\t\t    k = i,\n\t\t\t\t\t\t    p = pos;\n\n\t\t\t\t\t\tfor (var len = strarr.length; k < len && (p < to || (!strarr[k].type && !strarr[k - 1].greedy)); ++k) {\n\t\t\t\t\t\t\tp += strarr[k].length;\n\t\t\t\t\t\t\t// Move the index i to the element in strarr that is closest to from\n\t\t\t\t\t\t\tif (from >= p) {\n\t\t\t\t\t\t\t\t++i;\n\t\t\t\t\t\t\t\tpos = p;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (strarr[i] instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Number of tokens to delete and replace with the new match\n\t\t\t\t\t\tdelNum = k - i;\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpattern.lastIndex = 0;\n\n\t\t\t\t\t\tvar match = pattern.exec(str),\n\t\t\t\t\t\t\tdelNum = 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tif (oneshot) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(lookbehind) {\n\t\t\t\t\t\tlookbehindLength = match[1] ? match[1].length : 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar from = match.index + lookbehindLength,\n\t\t\t\t\t    match = match[0].slice(lookbehindLength),\n\t\t\t\t\t    to = from + match.length,\n\t\t\t\t\t    before = str.slice(0, from),\n\t\t\t\t\t    after = str.slice(to);\n\n\t\t\t\t\tvar args = [i, delNum];\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\t++i;\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t\targs.push(before);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar wrapped = new Token(token, inside? _.tokenize(match, inside) : match, alias, match, greedy);\n\n\t\t\t\t\targs.push(wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\targs.push(after);\n\t\t\t\t\t}\n\n\t\t\t\t\tArray.prototype.splice.apply(strarr, args);\n\n\t\t\t\t\tif (delNum != 1)\n\t\t\t\t\t\t_.matchGrammar(text, strarr, grammar, i, pos, true, token);\n\n\t\t\t\t\tif (oneshot)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\ttokenize: function(text, grammar) {\n\t\tvar strarr = [text];\n\n\t\tvar rest = grammar.rest;\n\n\t\tif (rest) {\n\t\t\tfor (var token in rest) {\n\t\t\t\tgrammar[token] = rest[token];\n\t\t\t}\n\n\t\t\tdelete grammar.rest;\n\t\t}\n\n\t\t_.matchGrammar(text, strarr, grammar, 0, 0, false);\n\n\t\treturn strarr;\n\t},\n\n\thooks: {\n\t\tall: {},\n\n\t\tadd: function (name, callback) {\n\t\t\tvar hooks = _.hooks.all;\n\n\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\thooks[name].push(callback);\n\t\t},\n\n\t\trun: function (name, env) {\n\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i=0, callback; callback = callbacks[i++];) {\n\t\t\t\tcallback(env);\n\t\t\t}\n\t\t}\n\t},\n\n\tToken: Token\n};\n\n_self.Prism = _;\n\nfunction Token(type, content, alias, matchedStr, greedy) {\n\tthis.type = type;\n\tthis.content = content;\n\tthis.alias = alias;\n\t// Copy of the full string this token was created from\n\tthis.length = (matchedStr || \"\").length|0;\n\tthis.greedy = !!greedy;\n}\n\nToken.stringify = function(o, language, parent) {\n\tif (typeof o == 'string') {\n\t\treturn o;\n\t}\n\n\tif (Array.isArray(o)) {\n\t\treturn o.map(function(element) {\n\t\t\treturn Token.stringify(element, language, o);\n\t\t}).join('');\n\t}\n\n\tvar env = {\n\t\ttype: o.type,\n\t\tcontent: Token.stringify(o.content, language, parent),\n\t\ttag: 'span',\n\t\tclasses: ['token', o.type],\n\t\tattributes: {},\n\t\tlanguage: language,\n\t\tparent: parent\n\t};\n\n\tif (o.alias) {\n\t\tvar aliases = Array.isArray(o.alias) ? o.alias : [o.alias];\n\t\tArray.prototype.push.apply(env.classes, aliases);\n\t}\n\n\t_.hooks.run('wrap', env);\n\n\tvar attributes = Object.keys(env.attributes).map(function(name) {\n\t\treturn name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t}).join(' ');\n\n\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + (attributes ? ' ' + attributes : '') + '>' + env.content + '</' + env.tag + '>';\n\n};\n\nif (!_self.document) {\n\tif (!_self.addEventListener) {\n\t\t// in Node.js\n\t\treturn _;\n\t}\n\n\tif (!_.disableWorkerMessageHandler) {\n\t\t// In worker\n\t\t_self.addEventListener('message', function (evt) {\n\t\t\tvar message = JSON.parse(evt.data),\n\t\t\t\tlang = message.language,\n\t\t\t\tcode = message.code,\n\t\t\t\timmediateClose = message.immediateClose;\n\n\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\tif (immediateClose) {\n\t\t\t\t_self.close();\n\t\t\t}\n\t\t}, false);\n\t}\n\n\treturn _;\n}\n\n//Get current script and highlight\nvar script = document.currentScript || [].slice.call(document.getElementsByTagName(\"script\")).pop();\n\nif (script) {\n\t_.filename = script.src;\n\n\tif (!_.manual && !script.hasAttribute('data-manual')) {\n\t\tif(document.readyState !== \"loading\") {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(_.highlightAll);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(_.highlightAll, 16);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdocument.addEventListener('DOMContentLoaded', _.highlightAll);\n\t\t}\n\t}\n}\n\nreturn _;\n\n})(_self);\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': /<!--[\\s\\S]*?-->/,\n\t'prolog': /<\\?[\\s\\S]+?\\?>/,\n\t'doctype': /<!DOCTYPE[\\s\\S]+?>/i,\n\t'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t/^=/,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': /&#?[\\da-z]{1,8};/i\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function(env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\s*|[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, tagName), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n\n\tvar string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: /@[\\w-]+?[\\s\\S]*?(?:;|(?=\\s*\\{))/i,\n\t\t\tinside: {\n\t\t\t\t'rule': /@[\\w-]+/\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': RegExp('url\\\\((?:' + string.source + '|.*?)\\\\)', 'i'),\n\t\t'selector': RegExp('[^{}\\\\s](?:[^{};\"\\']|' + string.source + ')*?(?=\\\\s*\\\\{)'),\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n\t\t'important': /!important\\b/i,\n\t\t'function': /[-a-z0-9]+(?=\\()/i,\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\n\t\tPrism.languages.insertBefore('inside', 'attr-value', {\n\t\t\t'style-attr': {\n\t\t\t\tpattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'attr-name': {\n\t\t\t\t\t\tpattern: /^\\s*style/i,\n\t\t\t\t\t\tinside: markup.tag.inside\n\t\t\t\t\t},\n\t\t\t\t\t'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n\t\t\t\t\t'attr-value': {\n\t\t\t\t\t\tpattern: /.+/i,\n\t\t\t\t\t\tinside: Prism.languages.css\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\talias: 'language-css'\n\t\t\t}\n\t\t}, markup.tag);\n\t}\n\n}(Prism));\n\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\tpunctuation: /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'function': /\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])[_$A-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\.(?:prototype|constructor))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.])\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t'number': /\\b(?:(?:0[xX][\\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]+)n?|\\d+n|NaN|Infinity)\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'operator': /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})\\]]))/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)?\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=>)/i,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\s*)\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\${[^}]+}|[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /\\${[^}]+}/,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\${|}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t}\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\tif (typeof self === 'undefined' || !self.Prism || !self.document || !document.querySelector) {\n\t\treturn;\n\t}\n\n\t/**\n\t * @param {Element} [container=document]\n\t */\n\tself.Prism.fileHighlight = function(container) {\n\t\tcontainer = container || document;\n\n\t\tvar Extensions = {\n\t\t\t'js': 'javascript',\n\t\t\t'py': 'python',\n\t\t\t'rb': 'ruby',\n\t\t\t'ps1': 'powershell',\n\t\t\t'psm1': 'powershell',\n\t\t\t'sh': 'bash',\n\t\t\t'bat': 'batch',\n\t\t\t'h': 'c',\n\t\t\t'tex': 'latex'\n\t\t};\n\n\t\tArray.prototype.slice.call(container.querySelectorAll('pre[data-src]')).forEach(function (pre) {\n\t\t\t// ignore if already loaded\n\t\t\tif (pre.hasAttribute('data-src-loaded')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// load current\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language, parent = pre;\n\t\t\tvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n\t\t\twhile (parent && !lang.test(parent.className)) {\n\t\t\t\tparent = parent.parentNode;\n\t\t\t}\n\n\t\t\tif (parent) {\n\t\t\t\tlanguage = (pre.className.match(lang) || [, ''])[1];\n\t\t\t}\n\n\t\t\tif (!language) {\n\t\t\t\tvar extension = (src.match(/\\.(\\w+)$/) || [, ''])[1];\n\t\t\t\tlanguage = Extensions[extension] || extension;\n\t\t\t}\n\n\t\t\tvar code = document.createElement('code');\n\t\t\tcode.className = 'language-' + language;\n\n\t\t\tpre.textContent = '';\n\n\t\t\tcode.textContent = 'Loading…';\n\n\t\t\tpre.appendChild(code);\n\n\t\t\tvar xhr = new XMLHttpRequest();\n\n\t\t\txhr.open('GET', src, true);\n\n\t\t\txhr.onreadystatechange = function () {\n\t\t\t\tif (xhr.readyState == 4) {\n\n\t\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\t\tcode.textContent = xhr.responseText;\n\n\t\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t\t\t// mark as loaded\n\t\t\t\t\t\tpre.setAttribute('data-src-loaded', '');\n\t\t\t\t\t}\n\t\t\t\t\telse if (xhr.status >= 400) {\n\t\t\t\t\t\tcode.textContent = '✖ Error ' + xhr.status + ' while fetching file: ' + xhr.statusText;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcode.textContent = '✖ Error: File does not exist or is empty';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\txhr.send(null);\n\t\t});\n\n\t\tif (Prism.plugins.toolbar) {\n\t\t\tPrism.plugins.toolbar.registerButton('download-file', function (env) {\n\t\t\t\tvar pre = env.element.parentNode;\n\t\t\t\tif (!pre || !/pre/i.test(pre.nodeName) || !pre.hasAttribute('data-src') || !pre.hasAttribute('data-download-link')) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar src = pre.getAttribute('data-src');\n\t\t\t\tvar a = document.createElement('a');\n\t\t\t\ta.textContent = pre.getAttribute('data-download-link-label') || 'Download';\n\t\t\t\ta.setAttribute('download', '');\n\t\t\t\ta.href = src;\n\t\t\t\treturn a;\n\t\t\t});\n\t\t}\n\n\t};\n\n\tdocument.addEventListener('DOMContentLoaded', function () {\n\t\t// execute inside handler, for dropping Event as argument\n\t\tself.Prism.fileHighlight();\n\t});\n\n})();\n","!function(i){var t=i.util.clone(i.languages.javascript);i.languages.jsx=i.languages.extend(\"markup\",t),i.languages.jsx.tag.pattern=/<\\/?(?:[\\w.:-]+\\s*(?:\\s+(?:[\\w.:-]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s{'\">=]+|\\{(?:\\{(?:\\{[^}]*\\}|[^{}])*\\}|[^{}])+\\}))?|\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}))*\\s*\\/?)?>/i,i.languages.jsx.tag.inside.tag.pattern=/^<\\/?[^\\s>\\/]*/i,i.languages.jsx.tag.inside[\"attr-value\"].pattern=/=(?!\\{)(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">]+)/i,i.languages.jsx.tag.inside.tag.inside[\"class-name\"]=/^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/,i.languages.insertBefore(\"inside\",\"attr-name\",{spread:{pattern:/\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}/,inside:{punctuation:/\\.{3}|[{}.]/,\"attr-value\":/\\w+/}}},i.languages.jsx.tag),i.languages.insertBefore(\"inside\",\"attr-value\",{script:{pattern:/=(\\{(?:\\{(?:\\{[^}]*\\}|[^}])*\\}|[^}])+\\})/i,inside:{\"script-punctuation\":{pattern:/^=(?={)/,alias:\"punctuation\"},rest:i.languages.jsx},alias:\"language-javascript\"}},i.languages.jsx.tag);var o=function(t){return t?\"string\"==typeof t?t:\"string\"==typeof t.content?t.content:t.content.map(o).join(\"\"):\"\"},p=function(t){for(var n=[],e=0;e<t.length;e++){var a=t[e],s=!1;if(\"string\"!=typeof a&&(\"tag\"===a.type&&a.content[0]&&\"tag\"===a.content[0].type?\"</\"===a.content[0].content[0].content?0<n.length&&n[n.length-1].tagName===o(a.content[0].content[1])&&n.pop():\"/>\"===a.content[a.content.length-1].content||n.push({tagName:o(a.content[0].content[1]),openedBraces:0}):0<n.length&&\"punctuation\"===a.type&&\"{\"===a.content?n[n.length-1].openedBraces++:0<n.length&&0<n[n.length-1].openedBraces&&\"punctuation\"===a.type&&\"}\"===a.content?n[n.length-1].openedBraces--:s=!0),(s||\"string\"==typeof a)&&0<n.length&&0===n[n.length-1].openedBraces){var g=o(a);e<t.length-1&&(\"string\"==typeof t[e+1]||\"plain-text\"===t[e+1].type)&&(g+=o(t[e+1]),t.splice(e+1,1)),0<e&&(\"string\"==typeof t[e-1]||\"plain-text\"===t[e-1].type)&&(g=o(t[e-1])+g,t.splice(e-1,1),e--),t[e]=new i.Token(\"plain-text\",g,null,g)}a.content&&\"string\"!=typeof a.content&&p(a.content)}};i.hooks.add(\"after-tokenize\",function(t){\"jsx\"!==t.language&&\"tsx\"!==t.language||p(t.tokens)})}(Prism);","import \"impress.js\";\nimport Prism from \"prismjs\";\nimport \"prismjs/themes/prism-okaidia.css\";\nimport \"prismjs/components/prism-jsx.min.js\";\n\nimpress().init();\n\nhljs.initHighlightingOnLoad();\n"]}